{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1aMxX0kYYnxNM3kqJPpiT4TJz9l3OY3LQ","timestamp":1689952477928}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Project Name**\n","\n","Analysis on Global Terrorism\n"],"metadata":{"id":"pIEsgAX6m1OK"}},{"cell_type":"markdown","source":["Contribution - Individual\n"],"metadata":{"id":"BCOYkRFVAHev"}},{"cell_type":"markdown","source":["Name :- Om Nitin Patil"],"metadata":{"id":"O7quE6YNEVtu"}},{"cell_type":"markdown","source":["# **Project Summary -**\n","\n","Definition of terrorism:\n","\n","Terrorism is, in the broadest sense, the use of intentionally indiscriminate violence as a means to create terror among masses of people; or fear to achieve a financial, political, religious or ideological aim.\n","\n","\n","\n","```\n","About the dataset:\n","\n","The dataset contains information of more than 180,000 terrorist attacks.\n","```\n","\n","\n","\n","\n","*The Global Terrorism Database (GTD) is an open source database including information on terrorist attacks around the world from 1970 through 2017, except 1993. The GTD includes systematic data on deomestic as well as international terrorist incidents that have occurred during this time. It includes more than 180,000 attacks.\n","\n","Content\n","There are 135 different columns in this dataset. But, I have selected some of them.\n","\n","* year - in which year the attack happend\n","* month - in which month of the year the attack happened\n","* day - on which day of the month the attack happened\n","* country - in which country the attacked happened\n","* region - which region the country lies in\n","* city - the city in which the attack happened\n","* latitude - of the location of the attack\n","* longitude - of the location of attack\n","* attackType - type of attack\n","* target - who was the target\n","* targetType - type of target\n","* groupName - name of the group who executed the attack\n","* weaponType - which type of weapon is used in the attack\n","* success - whether the attack was successful or not\n","* killed - how many people were killed in the attack\n","* wounded - how many people were wounded in the attack\n","* summary - summary of the attack happened\n","* motive - motive of the attack"],"metadata":{"id":"aHRQYo6mnUia"}},{"cell_type":"markdown","source":["**GitHub link** **:-**\n","https://github.com/om-maker/Capstone-Project-1---Analysis-On-Global-Terrorsim/upload/main\n","\n","\n","\n","**Problem Statement**\n","\n","The problem is to perform an exploratory data analysis on the Global Terrorism dataset in order to gain insights into the patterns, trends, and characteristics of terrorism incidents worldwide. The dataset contains information about various aspects of terrorist attacks, including the location, date, type of attack, number of casualties, and the groups responsible. By analyzing this dataset, we aim to uncover key findings and answer relevant questions related to global terrorism.\n","\n"],"metadata":{"id":"387Hk7XSoV8B"}},{"cell_type":"code","source":["%pip install mpld3\n","%pip install geopandas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"28wwPQcv2M0b","executionInfo":{"status":"ok","timestamp":1690001364197,"user_tz":-330,"elapsed":7728,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"82517a5e-b66b-4251-c856-d20ac54610c1"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting mpld3\n","  Downloading mpld3-0.5.9-py3-none-any.whl (201 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/201.2 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m112.6/201.2 kB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m201.2/201.2 kB\u001b[0m \u001b[31m3.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from mpld3) (3.1.2)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from mpld3) (3.7.1)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->mpld3) (2.1.3)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mpld3) (1.1.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mpld3) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mpld3) (4.41.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mpld3) (1.4.4)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mpld3) (1.22.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mpld3) (23.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mpld3) (8.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mpld3) (3.1.0)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mpld3) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->mpld3) (1.16.0)\n","Installing collected packages: mpld3\n","Successfully installed mpld3-0.5.9\n","Requirement already satisfied: geopandas in /usr/local/lib/python3.10/dist-packages (0.13.2)\n","Requirement already satisfied: fiona>=1.8.19 in /usr/local/lib/python3.10/dist-packages (from geopandas) (1.9.4.post1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from geopandas) (23.1)\n","Requirement already satisfied: pandas>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from geopandas) (1.5.3)\n","Requirement already satisfied: pyproj>=3.0.1 in /usr/local/lib/python3.10/dist-packages (from geopandas) (3.6.0)\n","Requirement already satisfied: shapely>=1.7.1 in /usr/local/lib/python3.10/dist-packages (from geopandas) (2.0.1)\n","Requirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.19->geopandas) (23.1.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.19->geopandas) (2023.5.7)\n","Requirement already satisfied: click~=8.0 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.19->geopandas) (8.1.6)\n","Requirement already satisfied: click-plugins>=1.0 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.19->geopandas) (1.1.1)\n","Requirement already satisfied: cligj>=0.5 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.19->geopandas) (0.7.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.19->geopandas) (1.16.0)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.1.0->geopandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.1.0->geopandas) (2022.7.1)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.1.0->geopandas) (1.22.4)\n"]}]},{"cell_type":"code","execution_count":4,"metadata":{"id":"MfcYSQMq0ZV-","executionInfo":{"status":"ok","timestamp":1690001439734,"user_tz":-330,"elapsed":2107,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}}},"outputs":[],"source":["# Import the required libraries\n","import mpld3\n","import gzip\n","import geopandas as gpd\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import folium as fl\n","import plotly.express as px\n","import plotly.graph_objs as go\n","\n","from folium.plugins import HeatMap\n","from folium.plugins import PolyLineTextPath"]},{"cell_type":"markdown","source":["Ignore the data warnings"],"metadata":{"id":"_otx6Qye24wS"}},{"cell_type":"code","source":["# Not show the warnings\n","import warnings\n","warnings.filterwarnings('ignore')"],"metadata":{"id":"GnqKU2bh2xgR","executionInfo":{"status":"ok","timestamp":1690001441651,"user_tz":-330,"elapsed":3,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["**Read the csv file using 'read_csv'.**"],"metadata":{"id":"7rmfcxeI2-qq"}},{"cell_type":"code","source":["df = pd.read_csv('/content/Global Terrorism Data.csv', encoding='iso-8859-1')"],"metadata":{"id":"9Zjx5xYF2qlG","executionInfo":{"status":"ok","timestamp":1690003884961,"user_tz":-330,"elapsed":3557,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}}},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":["**Check the structure of the data**"],"metadata":{"id":"Oqle9c_I3USf"}},{"cell_type":"code","source":["# Check the number of rows and columns in the dataframe\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GN4yZZ_g230j","executionInfo":{"status":"ok","timestamp":1690001483060,"user_tz":-330,"elapsed":418,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"3febe5bf-0d80-4ae4-ace3-9ea9a98e2d6a"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(11983, 135)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Check the data of top 5 rows\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"id":"yunt_-v03dvw","executionInfo":{"status":"ok","timestamp":1690001486146,"user_tz":-330,"elapsed":19,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"73589955-a05c-49f5-f0eb-22349488aba4"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        eventid  iyear  imonth  iday approxdate  extended resolution  country  \\\n","0  1.970000e+11   1970     7.0   2.0        NaN       0.0        NaN     58.0   \n","1  1.970000e+11   1970     0.0   0.0        NaN       0.0        NaN    130.0   \n","2  1.970010e+11   1970     1.0   0.0        NaN       0.0        NaN    160.0   \n","3  1.970010e+11   1970     1.0   0.0        NaN       0.0        NaN     78.0   \n","4  1.970010e+11   1970     1.0   0.0        NaN       0.0        NaN    101.0   \n","\n","          country_txt  region  ... addnotes scite1 scite2  scite3  dbsource  \\\n","0  Dominican Republic     2.0  ...      NaN    NaN    NaN     NaN      PGIS   \n","1              Mexico     1.0  ...      NaN    NaN    NaN     NaN      PGIS   \n","2         Philippines     5.0  ...      NaN    NaN    NaN     NaN      PGIS   \n","3              Greece     8.0  ...      NaN    NaN    NaN     NaN      PGIS   \n","4               Japan     4.0  ...      NaN    NaN    NaN     NaN      PGIS   \n","\n","   INT_LOG  INT_IDEO INT_MISC INT_ANY  related  \n","0      0.0       0.0      0.0     0.0      NaN  \n","1      0.0       1.0      1.0     1.0      NaN  \n","2     -9.0      -9.0      1.0     1.0      NaN  \n","3     -9.0      -9.0      1.0     1.0      NaN  \n","4     -9.0      -9.0      1.0     1.0      NaN  \n","\n","[5 rows x 135 columns]"],"text/html":["\n","\n","  <div id=\"df-d8898956-1873-491c-b6a2-5fe43a0d1e20\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>eventid</th>\n","      <th>iyear</th>\n","      <th>imonth</th>\n","      <th>iday</th>\n","      <th>approxdate</th>\n","      <th>extended</th>\n","      <th>resolution</th>\n","      <th>country</th>\n","      <th>country_txt</th>\n","      <th>region</th>\n","      <th>...</th>\n","      <th>addnotes</th>\n","      <th>scite1</th>\n","      <th>scite2</th>\n","      <th>scite3</th>\n","      <th>dbsource</th>\n","      <th>INT_LOG</th>\n","      <th>INT_IDEO</th>\n","      <th>INT_MISC</th>\n","      <th>INT_ANY</th>\n","      <th>related</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.970000e+11</td>\n","      <td>1970</td>\n","      <td>7.0</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>58.0</td>\n","      <td>Dominican Republic</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>PGIS</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.970000e+11</td>\n","      <td>1970</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>130.0</td>\n","      <td>Mexico</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>PGIS</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.970010e+11</td>\n","      <td>1970</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>160.0</td>\n","      <td>Philippines</td>\n","      <td>5.0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>PGIS</td>\n","      <td>-9.0</td>\n","      <td>-9.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.970010e+11</td>\n","      <td>1970</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>78.0</td>\n","      <td>Greece</td>\n","      <td>8.0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>PGIS</td>\n","      <td>-9.0</td>\n","      <td>-9.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.970010e+11</td>\n","      <td>1970</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>101.0</td>\n","      <td>Japan</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>PGIS</td>\n","      <td>-9.0</td>\n","      <td>-9.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 135 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d8898956-1873-491c-b6a2-5fe43a0d1e20')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-5edd33b7-051d-4657-8bd4-5e4bb08d8d1f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5edd33b7-051d-4657-8bd4-5e4bb08d8d1f')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-5edd33b7-051d-4657-8bd4-5e4bb08d8d1f button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d8898956-1873-491c-b6a2-5fe43a0d1e20 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d8898956-1873-491c-b6a2-5fe43a0d1e20');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# Types of all columns\n","df.info(verbose=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WvPeNqM83h8_","executionInfo":{"status":"ok","timestamp":1689954211662,"user_tz":-330,"elapsed":460,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"6bc2e857-9d98-4a82-8ecc-35a66874ffb6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 36899 entries, 0 to 36898\n","Data columns (total 135 columns):\n"," #    Column              Dtype  \n","---   ------              -----  \n"," 0    eventid             float64\n"," 1    iyear               int64  \n"," 2    imonth              int64  \n"," 3    iday                int64  \n"," 4    approxdate          object \n"," 5    extended            int64  \n"," 6    resolution          object \n"," 7    country             int64  \n"," 8    country_txt         object \n"," 9    region              int64  \n"," 10   region_txt          object \n"," 11   provstate           object \n"," 12   city                object \n"," 13   latitude            float64\n"," 14   longitude           float64\n"," 15   specificity         float64\n"," 16   vicinity            float64\n"," 17   location            object \n"," 18   summary             object \n"," 19   crit1               float64\n"," 20   crit2               float64\n"," 21   crit3               float64\n"," 22   doubtterr           float64\n"," 23   alternative         float64\n"," 24   alternative_txt     object \n"," 25   multiple            float64\n"," 26   success             float64\n"," 27   suicide             float64\n"," 28   attacktype1         float64\n"," 29   attacktype1_txt     object \n"," 30   attacktype2         float64\n"," 31   attacktype2_txt     object \n"," 32   attacktype3         float64\n"," 33   attacktype3_txt     object \n"," 34   targtype1           float64\n"," 35   targtype1_txt       object \n"," 36   targsubtype1        float64\n"," 37   targsubtype1_txt    object \n"," 38   corp1               object \n"," 39   target1             object \n"," 40   natlty1             float64\n"," 41   natlty1_txt         object \n"," 42   targtype2           float64\n"," 43   targtype2_txt       object \n"," 44   targsubtype2        float64\n"," 45   targsubtype2_txt    object \n"," 46   corp2               object \n"," 47   target2             object \n"," 48   natlty2             float64\n"," 49   natlty2_txt         object \n"," 50   targtype3           float64\n"," 51   targtype3_txt       object \n"," 52   targsubtype3        float64\n"," 53   targsubtype3_txt    object \n"," 54   corp3               object \n"," 55   target3             object \n"," 56   natlty3             float64\n"," 57   natlty3_txt         object \n"," 58   gname               object \n"," 59   gsubname            object \n"," 60   gname2              object \n"," 61   gsubname2           object \n"," 62   gname3              object \n"," 63   gsubname3           float64\n"," 64   motive              object \n"," 65   guncertain1         float64\n"," 66   guncertain2         float64\n"," 67   guncertain3         float64\n"," 68   individual          float64\n"," 69   nperps              float64\n"," 70   nperpcap            float64\n"," 71   claimed             float64\n"," 72   claimmode           float64\n"," 73   claimmode_txt       object \n"," 74   claim2              float64\n"," 75   claimmode2          float64\n"," 76   claimmode2_txt      object \n"," 77   claim3              float64\n"," 78   claimmode3          float64\n"," 79   claimmode3_txt      object \n"," 80   compclaim           float64\n"," 81   weaptype1           float64\n"," 82   weaptype1_txt       object \n"," 83   weapsubtype1        float64\n"," 84   weapsubtype1_txt    object \n"," 85   weaptype2           float64\n"," 86   weaptype2_txt       object \n"," 87   weapsubtype2        float64\n"," 88   weapsubtype2_txt    object \n"," 89   weaptype3           float64\n"," 90   weaptype3_txt       object \n"," 91   weapsubtype3        float64\n"," 92   weapsubtype3_txt    object \n"," 93   weaptype4           float64\n"," 94   weaptype4_txt       object \n"," 95   weapsubtype4        float64\n"," 96   weapsubtype4_txt    object \n"," 97   weapdetail          object \n"," 98   nkill               float64\n"," 99   nkillus             float64\n"," 100  nkillter            float64\n"," 101  nwound              float64\n"," 102  nwoundus            float64\n"," 103  nwoundte            float64\n"," 104  property            float64\n"," 105  propextent          float64\n"," 106  propextent_txt      object \n"," 107  propvalue           float64\n"," 108  propcomment         object \n"," 109  ishostkid           float64\n"," 110  nhostkid            float64\n"," 111  nhostkidus          float64\n"," 112  nhours              float64\n"," 113  ndays               float64\n"," 114  divert              object \n"," 115  kidhijcountry       object \n"," 116  ransom              float64\n"," 117  ransomamt           float64\n"," 118  ransomamtus         float64\n"," 119  ransompaid          float64\n"," 120  ransompaidus        float64\n"," 121  ransomnote          object \n"," 122  hostkidoutcome      float64\n"," 123  hostkidoutcome_txt  object \n"," 124  nreleased           float64\n"," 125  addnotes            object \n"," 126  scite1              object \n"," 127  scite2              object \n"," 128  scite3              object \n"," 129  dbsource            object \n"," 130  INT_LOG             float64\n"," 131  INT_IDEO            float64\n"," 132  INT_MISC            float64\n"," 133  INT_ANY             float64\n"," 134  related             object \n","dtypes: float64(72), int64(6), object(57)\n","memory usage: 38.0+ MB\n"]}]},{"cell_type":"code","source":["# Let's also summarize the features using the df.describe method:\n","df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":393},"id":"wafFBnZK3lTJ","executionInfo":{"status":"ok","timestamp":1689954337596,"user_tz":-330,"elapsed":441,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"a6b385fe-bc32-4148-a1e8-95e048ada79b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            eventid         iyear        imonth          iday      extended  \\\n","count  3.689900e+04  36899.000000  36899.000000  36899.000000  36899.000000   \n","mean   1.982130e+11   1982.066072      6.369712     15.255075      0.016234   \n","std    4.527916e+08      4.528321      3.399823      8.840654      0.126374   \n","min    1.970000e+11   1970.000000      0.000000      0.000000      0.000000   \n","25%    1.979090e+11   1979.000000      3.000000      8.000000      0.000000   \n","50%    1.983040e+11   1983.000000      6.000000     15.000000      0.000000   \n","75%    1.986030e+11   1986.000000      9.000000     23.000000      0.000000   \n","max    1.989010e+11   1989.000000     12.000000     31.000000      1.000000   \n","\n","            country        region      latitude     longitude   specificity  \\\n","count  36899.000000  36899.000000  34865.000000  3.486500e+04  36898.000000   \n","mean     156.588417      5.150871     17.983340 -2.500908e+03      1.403653   \n","std      144.370512      3.179010     25.570326  4.615739e+05      1.093756   \n","min        4.000000      1.000000    -53.154613 -8.618590e+07      1.000000   \n","25%       61.000000      2.000000      4.667128 -7.701538e+01      1.000000   \n","50%      110.000000      3.000000     14.596051 -6.318204e+01      1.000000   \n","75%      185.000000      8.000000     40.697132  1.249007e+01      1.000000   \n","max      605.000000     12.000000     64.837778  1.784419e+02      5.000000   \n","\n","       ...     ransomamt  ransomamtus    ransompaid  ransompaidus  \\\n","count  ...  5.250000e+02          1.0  1.170000e+02           2.0   \n","mean   ...  3.381689e+06      20000.0  1.081818e+06           0.0   \n","std    ...  4.403646e+07          NaN  4.243133e+06           0.0   \n","min    ...  0.000000e+00      20000.0  0.000000e+00           0.0   \n","25%    ...  0.000000e+00      20000.0  0.000000e+00           0.0   \n","50%    ...  0.000000e+00      20000.0  2.700000e+04           0.0   \n","75%    ...  4.500000e+05      20000.0  5.000000e+05           0.0   \n","max    ...  1.000000e+09      20000.0  4.100000e+07           0.0   \n","\n","       hostkidoutcome   nreleased       INT_LOG      INT_IDEO      INT_MISC  \\\n","count      939.000000  716.000000  36898.000000  36898.000000  36898.000000   \n","mean         2.961661    9.699721     -3.132853     -3.087918      0.160957   \n","std          1.363795   34.627941      4.367675      4.423176      0.768888   \n","min          2.000000  -99.000000     -9.000000     -9.000000     -9.000000   \n","25%          2.000000    1.000000     -9.000000     -9.000000      0.000000   \n","50%          2.000000    1.000000      0.000000      0.000000      0.000000   \n","75%          4.000000    2.000000      0.000000      0.000000      0.000000   \n","max          7.000000  390.000000      1.000000      1.000000      1.000000   \n","\n","            INT_ANY  \n","count  36898.000000  \n","mean      -2.373597  \n","std        4.310706  \n","min       -9.000000  \n","25%       -9.000000  \n","50%        0.000000  \n","75%        1.000000  \n","max        1.000000  \n","\n","[8 rows x 78 columns]"],"text/html":["\n","\n","  <div id=\"df-b984d272-c9c4-4faf-8d73-ac550fbadb62\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>eventid</th>\n","      <th>iyear</th>\n","      <th>imonth</th>\n","      <th>iday</th>\n","      <th>extended</th>\n","      <th>country</th>\n","      <th>region</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>specificity</th>\n","      <th>...</th>\n","      <th>ransomamt</th>\n","      <th>ransomamtus</th>\n","      <th>ransompaid</th>\n","      <th>ransompaidus</th>\n","      <th>hostkidoutcome</th>\n","      <th>nreleased</th>\n","      <th>INT_LOG</th>\n","      <th>INT_IDEO</th>\n","      <th>INT_MISC</th>\n","      <th>INT_ANY</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3.689900e+04</td>\n","      <td>36899.000000</td>\n","      <td>36899.000000</td>\n","      <td>36899.000000</td>\n","      <td>36899.000000</td>\n","      <td>36899.000000</td>\n","      <td>36899.000000</td>\n","      <td>34865.000000</td>\n","      <td>3.486500e+04</td>\n","      <td>36898.000000</td>\n","      <td>...</td>\n","      <td>5.250000e+02</td>\n","      <td>1.0</td>\n","      <td>1.170000e+02</td>\n","      <td>2.0</td>\n","      <td>939.000000</td>\n","      <td>716.000000</td>\n","      <td>36898.000000</td>\n","      <td>36898.000000</td>\n","      <td>36898.000000</td>\n","      <td>36898.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.982130e+11</td>\n","      <td>1982.066072</td>\n","      <td>6.369712</td>\n","      <td>15.255075</td>\n","      <td>0.016234</td>\n","      <td>156.588417</td>\n","      <td>5.150871</td>\n","      <td>17.983340</td>\n","      <td>-2.500908e+03</td>\n","      <td>1.403653</td>\n","      <td>...</td>\n","      <td>3.381689e+06</td>\n","      <td>20000.0</td>\n","      <td>1.081818e+06</td>\n","      <td>0.0</td>\n","      <td>2.961661</td>\n","      <td>9.699721</td>\n","      <td>-3.132853</td>\n","      <td>-3.087918</td>\n","      <td>0.160957</td>\n","      <td>-2.373597</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>4.527916e+08</td>\n","      <td>4.528321</td>\n","      <td>3.399823</td>\n","      <td>8.840654</td>\n","      <td>0.126374</td>\n","      <td>144.370512</td>\n","      <td>3.179010</td>\n","      <td>25.570326</td>\n","      <td>4.615739e+05</td>\n","      <td>1.093756</td>\n","      <td>...</td>\n","      <td>4.403646e+07</td>\n","      <td>NaN</td>\n","      <td>4.243133e+06</td>\n","      <td>0.0</td>\n","      <td>1.363795</td>\n","      <td>34.627941</td>\n","      <td>4.367675</td>\n","      <td>4.423176</td>\n","      <td>0.768888</td>\n","      <td>4.310706</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.970000e+11</td>\n","      <td>1970.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>-53.154613</td>\n","      <td>-8.618590e+07</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>20000.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>2.000000</td>\n","      <td>-99.000000</td>\n","      <td>-9.000000</td>\n","      <td>-9.000000</td>\n","      <td>-9.000000</td>\n","      <td>-9.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.979090e+11</td>\n","      <td>1979.000000</td>\n","      <td>3.000000</td>\n","      <td>8.000000</td>\n","      <td>0.000000</td>\n","      <td>61.000000</td>\n","      <td>2.000000</td>\n","      <td>4.667128</td>\n","      <td>-7.701538e+01</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>20000.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>-9.000000</td>\n","      <td>-9.000000</td>\n","      <td>0.000000</td>\n","      <td>-9.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.983040e+11</td>\n","      <td>1983.000000</td>\n","      <td>6.000000</td>\n","      <td>15.000000</td>\n","      <td>0.000000</td>\n","      <td>110.000000</td>\n","      <td>3.000000</td>\n","      <td>14.596051</td>\n","      <td>-6.318204e+01</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>20000.0</td>\n","      <td>2.700000e+04</td>\n","      <td>0.0</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.986030e+11</td>\n","      <td>1986.000000</td>\n","      <td>9.000000</td>\n","      <td>23.000000</td>\n","      <td>0.000000</td>\n","      <td>185.000000</td>\n","      <td>8.000000</td>\n","      <td>40.697132</td>\n","      <td>1.249007e+01</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>4.500000e+05</td>\n","      <td>20000.0</td>\n","      <td>5.000000e+05</td>\n","      <td>0.0</td>\n","      <td>4.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.989010e+11</td>\n","      <td>1989.000000</td>\n","      <td>12.000000</td>\n","      <td>31.000000</td>\n","      <td>1.000000</td>\n","      <td>605.000000</td>\n","      <td>12.000000</td>\n","      <td>64.837778</td>\n","      <td>1.784419e+02</td>\n","      <td>5.000000</td>\n","      <td>...</td>\n","      <td>1.000000e+09</td>\n","      <td>20000.0</td>\n","      <td>4.100000e+07</td>\n","      <td>0.0</td>\n","      <td>7.000000</td>\n","      <td>390.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 78 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b984d272-c9c4-4faf-8d73-ac550fbadb62')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-3e9cf731-6a26-4623-922a-73168cc9d4c3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3e9cf731-6a26-4623-922a-73168cc9d4c3')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-3e9cf731-6a26-4623-922a-73168cc9d4c3 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b984d272-c9c4-4faf-8d73-ac550fbadb62 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b984d272-c9c4-4faf-8d73-ac550fbadb62');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["**Data Quality check and missing values**"],"metadata":{"id":"5oqm6H1L3s4S"}},{"cell_type":"markdown","source":["1. Deal with duplicated data"],"metadata":{"id":"JSEMhiXf3u-R"}},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hLGGhLMZ3oHq","executionInfo":{"status":"ok","timestamp":1689954357109,"user_tz":-330,"elapsed":379,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"973c514e-3c52-4bd9-d100-0954a5f9ae9f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1823"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# Remove duplicated rows\n","df = df.drop_duplicates()"],"metadata":{"id":"kCDz3nG75GWF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WeRyjGkY5IVf","executionInfo":{"status":"ok","timestamp":1689954366494,"user_tz":-330,"elapsed":634,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"4cb81ba1-30ad-4415-b0b9-387b6cb456ea"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["2. Deal with missing data"],"metadata":{"id":"-OwcaZki34Pf"}},{"cell_type":"code","source":["# Percentage of null values in each column\n","null_percentage = df.isnull().sum() * 100 / len(df)"],"metadata":{"id":"cRBeWmlh33ED"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Top columns have highest percentages of null values\n","null_percentage.sort_values(ascending = False).head(50)"],"metadata":{"id":"ECcxJAf64Bce"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# List all of the columns having null values more than ~50% (ie. 45%)\n","null_columns = null_percentage[null_percentage.values>45].index\n","null_columns"],"metadata":{"id":"LI9joOJM4D2D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Remove those columns\n","df.drop(null_columns, axis=1, inplace=True)"],"metadata":{"id":"osYOC2_A4Gu9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# See the application data after dropping the columns having null values more than 45%\n","df.head()"],"metadata":{"id":"uGwPR9xn4JRw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# List of remaining columns which have null values\n","null_percentage = df.isnull().sum() * 100 / len(df)\n","null_percentage[null_percentage>0].sort_values(ascending = False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GnpoLfHZ4L8I","executionInfo":{"status":"ok","timestamp":1689954401039,"user_tz":-330,"elapsed":377,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"86225f0d-5449-4ff0-e29d-64a3826a42bf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["nwound              19.711484\n","weapsubtype1_txt    16.703729\n","weapsubtype1        16.703729\n","nkill               14.554111\n","weapdetail          10.046756\n","latitude             5.422511\n","longitude            5.422511\n","targsubtype1         4.644201\n","targsubtype1_txt     4.644201\n","target1              0.966473\n","ransom               0.872391\n","natlty1              0.538830\n","natlty1_txt          0.538830\n","ishostkid            0.487513\n","provstate            0.396282\n","targtype1            0.002851\n","doubtterr            0.002851\n","INT_MISC             0.002851\n","INT_IDEO             0.002851\n","INT_LOG              0.002851\n","dbsource             0.002851\n","specificity          0.002851\n","vicinity             0.002851\n","property             0.002851\n","crit1                0.002851\n","crit2                0.002851\n","crit3                0.002851\n","multiple             0.002851\n","targtype1_txt        0.002851\n","weaptype1_txt        0.002851\n","weaptype1            0.002851\n","individual           0.002851\n","guncertain1          0.002851\n","gname                0.002851\n","success              0.002851\n","city                 0.002851\n","suicide              0.002851\n","attacktype1          0.002851\n","attacktype1_txt      0.002851\n","INT_ANY              0.002851\n","dtype: float64"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["df.shape"],"metadata":{"id":"33t_DSHf4xSW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Show all numerical columns\n","df.describe().columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XthYZcDC40-F","executionInfo":{"status":"ok","timestamp":1689954418992,"user_tz":-330,"elapsed":647,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"b2aa5071-8825-4650-aec6-5cc153f66f12"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['eventid', 'iyear', 'imonth', 'iday', 'extended', 'country', 'region',\n","       'latitude', 'longitude', 'specificity', 'vicinity', 'crit1', 'crit2',\n","       'crit3', 'doubtterr', 'multiple', 'success', 'suicide', 'attacktype1',\n","       'targtype1', 'targsubtype1', 'natlty1', 'guncertain1', 'individual',\n","       'weaptype1', 'weapsubtype1', 'nkill', 'nwound', 'property', 'ishostkid',\n","       'ransom', 'INT_LOG', 'INT_IDEO', 'INT_MISC', 'INT_ANY'],\n","      dtype='object')"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["df.doubtterr.value_counts()"],"metadata":{"id":"2hkOvvQg5bCo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["3. Deal with uneccessary columns"],"metadata":{"id":"OtZFgIFP5iWw"}},{"cell_type":"code","source":["# count the number of unique values in each column\n","unique_counts = df.nunique()\n","\n","# filter the columns based on unique value count\n","df = df.loc[:, unique_counts > 1]\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"blSb_HjE5e_c","executionInfo":{"status":"ok","timestamp":1689954435049,"user_tz":-330,"elapsed":378,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"f648b17b-539d-408f-85c7-962d9bce79cb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        eventid  iyear  imonth  iday  extended  country         country_txt  \\\n","0  1.970000e+11   1970       7     2         0       58  Dominican Republic   \n","1  1.970000e+11   1970       0     0         0      130              Mexico   \n","2  1.970010e+11   1970       1     0         0      160         Philippines   \n","3  1.970010e+11   1970       1     0         0       78              Greece   \n","4  1.970010e+11   1970       1     0         0      101               Japan   \n","\n","   region                   region_txt provstate  ... nkill  nwound  property  \\\n","0       2  Central America & Caribbean       NaN  ...   1.0     0.0       0.0   \n","1       1                North America   Federal  ...   0.0     0.0       0.0   \n","2       5               Southeast Asia    Tarlac  ...   1.0     0.0       0.0   \n","3       8               Western Europe    Attica  ...   NaN     NaN       1.0   \n","4       4                    East Asia   Fukouka  ...   NaN     NaN       1.0   \n","\n","   ishostkid  ransom  dbsource  INT_LOG  INT_IDEO  INT_MISC  INT_ANY  \n","0        0.0     0.0      PGIS      0.0       0.0       0.0      0.0  \n","1        1.0     1.0      PGIS      0.0       1.0       1.0      1.0  \n","2        0.0     0.0      PGIS     -9.0      -9.0       1.0      1.0  \n","3        0.0     0.0      PGIS     -9.0      -9.0       1.0      1.0  \n","4        0.0     0.0      PGIS     -9.0      -9.0       1.0      1.0  \n","\n","[5 rows x 49 columns]"],"text/html":["\n","\n","  <div id=\"df-7cf4f002-ede8-4361-85d3-4e38ff468eb8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>eventid</th>\n","      <th>iyear</th>\n","      <th>imonth</th>\n","      <th>iday</th>\n","      <th>extended</th>\n","      <th>country</th>\n","      <th>country_txt</th>\n","      <th>region</th>\n","      <th>region_txt</th>\n","      <th>provstate</th>\n","      <th>...</th>\n","      <th>nkill</th>\n","      <th>nwound</th>\n","      <th>property</th>\n","      <th>ishostkid</th>\n","      <th>ransom</th>\n","      <th>dbsource</th>\n","      <th>INT_LOG</th>\n","      <th>INT_IDEO</th>\n","      <th>INT_MISC</th>\n","      <th>INT_ANY</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.970000e+11</td>\n","      <td>1970</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>58</td>\n","      <td>Dominican Republic</td>\n","      <td>2</td>\n","      <td>Central America &amp; Caribbean</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>PGIS</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.970000e+11</td>\n","      <td>1970</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>130</td>\n","      <td>Mexico</td>\n","      <td>1</td>\n","      <td>North America</td>\n","      <td>Federal</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>PGIS</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.970010e+11</td>\n","      <td>1970</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>160</td>\n","      <td>Philippines</td>\n","      <td>5</td>\n","      <td>Southeast Asia</td>\n","      <td>Tarlac</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>PGIS</td>\n","      <td>-9.0</td>\n","      <td>-9.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.970010e+11</td>\n","      <td>1970</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>78</td>\n","      <td>Greece</td>\n","      <td>8</td>\n","      <td>Western Europe</td>\n","      <td>Attica</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>PGIS</td>\n","      <td>-9.0</td>\n","      <td>-9.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.970010e+11</td>\n","      <td>1970</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>101</td>\n","      <td>Japan</td>\n","      <td>4</td>\n","      <td>East Asia</td>\n","      <td>Fukouka</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>PGIS</td>\n","      <td>-9.0</td>\n","      <td>-9.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 49 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7cf4f002-ede8-4361-85d3-4e38ff468eb8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-49323a56-bd3c-4709-895e-e78722909ec9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-49323a56-bd3c-4709-895e-e78722909ec9')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-49323a56-bd3c-4709-895e-e78722909ec9 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7cf4f002-ede8-4361-85d3-4e38ff468eb8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7cf4f002-ede8-4361-85d3-4e38ff468eb8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# Get the number of rows in the DataFrame\n","num_rows = len(df)\n","\n","# Get the number of unique values in each column\n","unique_counts = df.nunique()\n","\n","# Select the columns where the number of unique values is equal to the number of rows\n","result = unique_counts[unique_counts == num_rows].index.tolist()\n","\n","# Print the result\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2yAKVfXS5p7t","executionInfo":{"status":"ok","timestamp":1689954453642,"user_tz":-330,"elapsed":396,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"1007454b-390d-4d39-9f20-fc8107aa27ef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[]\n"]}]},{"cell_type":"code","source":["df.crit1.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8TSOhBtC50um","executionInfo":{"status":"ok","timestamp":1689954459464,"user_tz":-330,"elapsed":555,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"55fad4d6-e5f5-41c8-c8bc-1bba0f2e2c1a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0    34798\n","0.0      277\n","Name: crit1, dtype: int64"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["df = df.drop(['country', 'region', 'latitude', 'longitude', 'attacktype1', 'targtype1', 'targsubtype1', 'natlty1', 'weaptype1', 'weapsubtype1'], axis=1)"],"metadata":{"id":"r4G6XMeb53c7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["4. Rename Column"],"metadata":{"id":"jR2nGseN6BsL"}},{"cell_type":"code","source":["# Rename the columns\n","new_names = {'country_txt': 'country', 'region_txt': 'region', 'iyear': 'year', 'imonth': 'number_of_months', 'iday': 'number_of_days', 'attacktype1_txt': 'attack_type', 'targtype1_txt': 'target_type', 'targsubtype1_txt': 'target_subtype','target1': 'target', 'natlty1_txt': 'nationality','weaptype1_txt': 'weapon_type'}\n","df = df.rename(columns=new_names)"],"metadata":{"id":"2WA9qD885-NP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Analysis**"],"metadata":{"id":"NN2yYALv6Lbf"}},{"cell_type":"code","source":["def cases_group_by_count(df, column_name):\n","\n","    cases_group_by = df.groupby(column_name)['eventid'].count()\n","\n","    # Create a new DataFrame from the Series object\n","    cases_group_by_df = pd.DataFrame({column_name: cases_group_by.index, 'Number of Cases': cases_group_by.values})\n","\n","    # Sort the DataFrame by the Number of Cases column in descending order\n","    cases_group_by_df = cases_group_by_df.sort_values('Number of Cases', ascending=False)\n","\n","    print(cases_group_by_df.head())\n","\n","    return cases_group_by_df\n","\n","\n","def cases_group_by_sum(df, col_group_by, value):\n","\n","    cases_group_by = df.groupby(col_group_by)[value].sum()\n","\n","    # Create a new DataFrame from the Series object\n","    cases_group_by_df = pd.DataFrame({col_group_by: cases_group_by.index, value: cases_group_by.values})\n","\n","    # Sort the DataFrame by the Number of Cases column in descending order\n","    cases_group_by_df = cases_group_by_df.sort_values(value, ascending=False)\n","\n","    print(cases_group_by_df.head())\n","\n","    return cases_group_by_df\n","\n","\n","def cases_group_by_avg(df, col_group_by, value):\n","\n","    cases_group_by = df.groupby(col_group_by)[value].mean().round()\n","\n","    # Create a new DataFrame from the Series object\n","    cases_group_by_df = pd.DataFrame({col_group_by: cases_group_by.index, value: cases_group_by.values})\n","\n","    # Sort the DataFrame by the Number of Cases column in descending order\n","    cases_group_by_df = cases_group_by_df.sort_values(value, ascending=False)\n","\n","    print(cases_group_by_df.head())\n","\n","    return cases_group_by_df\n","\n","\n","def cases_group_by_percentage(df, col_group_by, value):\n","\n","    cases_group_by = df.groupby(col_group_by)[value].sum() * 100/df.groupby(col_group_by)['eventid'].count()\n","\n","    # Create a new DataFrame from the Series object\n","    cases_group_by_df = pd.DataFrame({col_group_by: cases_group_by.index, value: cases_group_by.values})\n","\n","    # Sort the DataFrame by the Number of Cases column in descending order\n","    cases_group_by_df = cases_group_by_df.sort_values(value, ascending=False)\n","\n","    print(cases_group_by_df.head())\n","\n","    return cases_group_by_df\n","\n","\n","def plot_bar(df,column):\n","\n","    cases_group_by_count_df = cases_group_by_count(df,column)\n","\n","    # Create a bar trace\n","    trace = go.Bar(x=cases_group_by_count_df[column], y=cases_group_by_count_df[\"Number of Cases\"])\n","\n","    # Create the layout\n","    layout = go.Layout(xaxis=dict(title=column), yaxis=dict(title='Number of Cases'))\n","\n","    # Create the figure\n","    fig = go.Figure(data=[trace], layout=layout)\n","\n","    # Display the figure\n","    fig.show()\n","\n","    return cases_group_by_count_df"],"metadata":{"id":"9PsgHvFa6EY4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Analysis No 1:- Number of cases by region"],"metadata":{"id":"eOUd1Bv16lvT"}},{"cell_type":"code","source":["cases_by_region_df = cases_group_by_count(df, \"region\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oxKSEv3q6PF4","executionInfo":{"status":"ok","timestamp":1689954582428,"user_tz":-330,"elapsed":413,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"557b6eb0-fc52-49fd-aac7-faff305b6774"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                         region  Number of Cases\n","6                 South America             8846\n","10               Western Europe             8468\n","1   Central America & Caribbean             7419\n","4    Middle East & North Africa             3437\n","5                 North America             2079\n"]}]},{"cell_type":"markdown","source":["Analysis No 2 :- Number of cases by countries"],"metadata":{"id":"MTniMK456swT"}},{"cell_type":"code","source":["cases_by_country_df = cases_group_by_count(df, \"country\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KAvhvWxy6lNS","executionInfo":{"status":"ok","timestamp":1689954611021,"user_tz":-330,"elapsed":584,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"56ca8115-9ced-4738-dee3-d4109265591e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["            country  Number of Cases\n","36      El Salvador             3821\n","96             Peru             3465\n","25         Colombia             2784\n","130  United Kingdom             2736\n","113           Spain             2057\n"]}]},{"cell_type":"code","source":["# create choropleth map\n","fig = px.choropleth(cases_by_country_df,\n","                    locations='country',\n","                    locationmode='country names',\n","                    color='Number of Cases',\n","                    hover_name='country',\n","                    projection='natural earth')\n","\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"FDeM-hVf6sLP","executionInfo":{"status":"ok","timestamp":1689954616594,"user_tz":-330,"elapsed":1676,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"788c44d7-0b3c-4860-b8dd-56380349eb7b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"24925d3f-aeb2-43cd-84c0-bf9865a58a10\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"24925d3f-aeb2-43cd-84c0-bf9865a58a10\")) {                    Plotly.newPlot(                        \"24925d3f-aeb2-43cd-84c0-bf9865a58a10\",                        [{\"coloraxis\":\"coloraxis\",\"geo\":\"geo\",\"hovertemplate\":\"<b>%{hovertext}</b><br><br>country=%{location}<br>Number of Cases=%{z}<extra></extra>\",\"hovertext\":[\"El Salvador\",\"Peru\",\"Colombia\",\"United Kingdom\",\"Spain\",\"United States\",\"Nicaragua\",\"Chile\",\"Guatemala\",\"Italy\",\"Lebanon\",\"France\",\"India\",\"South Africa\",\"Philippines\",\"Sri Lanka\",\"Turkey\",\"Argentina\",\"Israel\",\"West Germany (FRG)\",\"Iran\",\"Greece\",\"West Bank and Gaza Strip\",\"Honduras\",\"Pakistan\",\"Bolivia\",\"Japan\",\"Syria\",\"Mexico\",\"Portugal\",\"Namibia\",\"Venezuela\",\"Belgium\",\"Ecuador\",\"Ireland\",\"Brazil\",\"Thailand\",\"Rhodesia\",\"Mozambique\",\"Switzerland\",\"Uganda\",\"Bangladesh\",\"Zimbabwe\",\"Costa Rica\",\"Netherlands\",\"Austria\",\"Angola\",\"Myanmar\",\"Cyprus\",\"Guadeloupe\",\"Uruguay\",\"Egypt\",\"Kuwait\",\"Ethiopia\",\"Panama\",\"Jordan\",\"Suriname\",\"East Germany (GDR)\",\"Dominican Republic\",\"Iraq\",\"Sudan\",\"New Caledonia\",\"Malaysia\",\"Australia\",\"Haiti\",\"Lesotho\",\"Canada\",\"Denmark\",\"Afghanistan\",\"Zambia\",\"Somalia\",\"Malta\",\"Morocco\",\"United Arab Emirates\",\"South Korea\",\"Indonesia\",\"Jamaica\",\"Luxembourg\",\"Sweden\",\"Martinique\",\"Paraguay\",\"Kenya\",\"Libya\",\"Nepal\",\"Yugoslavia\",\"Tunisia\",\"Saudi Arabia\",\"Zaire\",\"Nigeria\",\"Botswana\",\"North Yemen\",\"Cambodia\",\"Djibouti\",\"Swaziland\",\"Guyana\",\"Grenada\",\"Singapore\",\"Mauritania\",\"Norway\",\"Hong Kong\",\"Chad\",\"Algeria\",\"New Zealand\",\"Senegal\",\"People's Republic of the Congo\",\"Trinidad and Tobago\",\"Bulgaria\",\"Tanzania\",\"Fiji\",\"Togo\",\"Western Sahara\",\"Poland\",\"Brunei\",\"Taiwan\",\"Iceland\",\"Bahamas\",\"Bahrain\",\"Barbados\",\"Romania\",\"Dominica\",\"Guinea\",\"South Yemen\",\"Seychelles\",\"French Guiana\",\"Central African Republic\",\"Finland\",\"Ghana\",\"Gabon\",\"New Hebrides\",\"Andorra\",\"Niger\",\"Vatican City\",\"Burkina Faso\",\"Falkland Islands\",\"Qatar\",\"Belize\",\"Maldives\",\"Albania\",\"Czechoslovakia\",\"South Vietnam\",\"Soviet Union\",\"Mauritius\"],\"locationmode\":\"country names\",\"locations\":[\"El Salvador\",\"Peru\",\"Colombia\",\"United Kingdom\",\"Spain\",\"United States\",\"Nicaragua\",\"Chile\",\"Guatemala\",\"Italy\",\"Lebanon\",\"France\",\"India\",\"South Africa\",\"Philippines\",\"Sri Lanka\",\"Turkey\",\"Argentina\",\"Israel\",\"West Germany (FRG)\",\"Iran\",\"Greece\",\"West Bank and Gaza Strip\",\"Honduras\",\"Pakistan\",\"Bolivia\",\"Japan\",\"Syria\",\"Mexico\",\"Portugal\",\"Namibia\",\"Venezuela\",\"Belgium\",\"Ecuador\",\"Ireland\",\"Brazil\",\"Thailand\",\"Rhodesia\",\"Mozambique\",\"Switzerland\",\"Uganda\",\"Bangladesh\",\"Zimbabwe\",\"Costa Rica\",\"Netherlands\",\"Austria\",\"Angola\",\"Myanmar\",\"Cyprus\",\"Guadeloupe\",\"Uruguay\",\"Egypt\",\"Kuwait\",\"Ethiopia\",\"Panama\",\"Jordan\",\"Suriname\",\"East Germany (GDR)\",\"Dominican Republic\",\"Iraq\",\"Sudan\",\"New Caledonia\",\"Malaysia\",\"Australia\",\"Haiti\",\"Lesotho\",\"Canada\",\"Denmark\",\"Afghanistan\",\"Zambia\",\"Somalia\",\"Malta\",\"Morocco\",\"United Arab Emirates\",\"South Korea\",\"Indonesia\",\"Jamaica\",\"Luxembourg\",\"Sweden\",\"Martinique\",\"Paraguay\",\"Kenya\",\"Libya\",\"Nepal\",\"Yugoslavia\",\"Tunisia\",\"Saudi Arabia\",\"Zaire\",\"Nigeria\",\"Botswana\",\"North Yemen\",\"Cambodia\",\"Djibouti\",\"Swaziland\",\"Guyana\",\"Grenada\",\"Singapore\",\"Mauritania\",\"Norway\",\"Hong Kong\",\"Chad\",\"Algeria\",\"New Zealand\",\"Senegal\",\"People's Republic of the Congo\",\"Trinidad and Tobago\",\"Bulgaria\",\"Tanzania\",\"Fiji\",\"Togo\",\"Western Sahara\",\"Poland\",\"Brunei\",\"Taiwan\",\"Iceland\",\"Bahamas\",\"Bahrain\",\"Barbados\",\"Romania\",\"Dominica\",\"Guinea\",\"South Yemen\",\"Seychelles\",\"French Guiana\",\"Central African Republic\",\"Finland\",\"Ghana\",\"Gabon\",\"New Hebrides\",\"Andorra\",\"Niger\",\"Vatican City\",\"Burkina Faso\",\"Falkland Islands\",\"Qatar\",\"Belize\",\"Maldives\",\"Albania\",\"Czechoslovakia\",\"South Vietnam\",\"Soviet Union\",\"Mauritius\"],\"name\":\"\",\"z\":[3821,3465,2784,2736,2057,1932,1716,1486,1468,1217,1203,1027,898,892,871,805,659,574,561,500,410,330,244,173,169,167,148,141,126,114,108,95,92,89,89,85,85,81,74,73,66,62,59,57,57,56,53,53,52,51,51,44,38,37,36,36,34,33,33,32,30,28,27,26,25,23,21,20,17,17,14,14,14,13,13,13,13,13,12,10,8,8,8,8,8,8,8,7,7,6,6,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"type\":\"choropleth\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"geo\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"projection\":{\"type\":\"natural earth\"},\"center\":{}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Number of Cases\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('24925d3f-aeb2-43cd-84c0-bf9865a58a10');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["df[df['country']=='El Salvador'].region.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BIR_x6hl60Q0","executionInfo":{"status":"ok","timestamp":1689954658356,"user_tz":-330,"elapsed":374,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"cf09c7e2-7b85-41ff-a934-d8fa566d5e9e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Central America & Caribbean    3821\n","Name: region, dtype: int64"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["**From the above analysis we can see that El Salvador has the most number of cases  i.e  3821**"],"metadata":{"id":"qrL9ag52JeCK"}},{"cell_type":"markdown","source":["**Analysis No 3 :-Cases with highest people killed**"],"metadata":{"id":"H_fA4DW_7GW1"}},{"cell_type":"code","source":["columns = ['year', 'country', 'region', 'city', 'attack_type', 'target_type', 'target_subtype', 'target', 'nationality', 'gname', 'weapon_type', 'weapdetail', 'nkill']"],"metadata":{"id":"18CvH2dS69Mr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[columns].sort_values('nkill', ascending=False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":510},"id":"fL1AmHzO7L-X","executionInfo":{"status":"ok","timestamp":1689954850404,"user_tz":-330,"elapsed":522,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"38be7be8-b168-4108-b6de-a560910517ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       year      country                       region       city  \\\n","6629   1978         Iran   Middle East & North Africa     Abadan   \n","31595  1987   Mozambique           Sub-Saharan Africa    Homoine   \n","25532  1985       Canada                North America    Toronto   \n","11636  1980  El Salvador  Central America & Caribbean  Suchitoto   \n","20984  1984        Sudan           Sub-Saharan Africa     Heglig   \n","\n","                          attack_type                  target_type  \\\n","6629   Facility/Infrastructure Attack                     Business   \n","31595                   Armed Assault  Private Citizens & Property   \n","25532               Bombing/Explosion          Airports & Aircraft   \n","11636                   Armed Assault                     Military   \n","20984               Bombing/Explosion                     Maritime   \n","\n","                                      target_subtype  \\\n","6629           Entertainment/Cultural/Stadium/Casino   \n","31595                       Village/City/Town/Suburb   \n","25532                   Aircraft (not at an airport)   \n","11636  Military Barracks/Base/Headquarters/Checkpost   \n","20984                              Civilian Maritime   \n","\n","                                                  target  nationality  \\\n","6629                                  Cinema Rex Theatre         Iran   \n","31595                                    Town of Homoine   Mozambique   \n","25532                    Airliner (Air India) flight 182        India   \n","11636                                      military post  El Salvador   \n","20984  Nile river passenger steamer with 800 passenge...        Sudan   \n","\n","                                               gname weapon_type  \\\n","6629                         Mujahedin-e Khalq (MEK)  Incendiary   \n","31595  Mozambique National Resistance Movement (MNR)    Firearms   \n","25532                                Sikh Extremists  Explosives   \n","11636                                        Unknown    Firearms   \n","20984                           Christian extremists     Unknown   \n","\n","              weapdetail  nkill  \n","6629          Incendiary  422.0  \n","31595  Automatic firearm  388.0  \n","25532          Explosive  329.0  \n","11636  Automatic firearm  300.0  \n","20984    Attacked; Shell  300.0  "],"text/html":["\n","\n","  <div id=\"df-2281bbf3-666e-4e29-a8a5-1f193d785b1c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>country</th>\n","      <th>region</th>\n","      <th>city</th>\n","      <th>attack_type</th>\n","      <th>target_type</th>\n","      <th>target_subtype</th>\n","      <th>target</th>\n","      <th>nationality</th>\n","      <th>gname</th>\n","      <th>weapon_type</th>\n","      <th>weapdetail</th>\n","      <th>nkill</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6629</th>\n","      <td>1978</td>\n","      <td>Iran</td>\n","      <td>Middle East &amp; North Africa</td>\n","      <td>Abadan</td>\n","      <td>Facility/Infrastructure Attack</td>\n","      <td>Business</td>\n","      <td>Entertainment/Cultural/Stadium/Casino</td>\n","      <td>Cinema Rex Theatre</td>\n","      <td>Iran</td>\n","      <td>Mujahedin-e Khalq (MEK)</td>\n","      <td>Incendiary</td>\n","      <td>Incendiary</td>\n","      <td>422.0</td>\n","    </tr>\n","    <tr>\n","      <th>31595</th>\n","      <td>1987</td>\n","      <td>Mozambique</td>\n","      <td>Sub-Saharan Africa</td>\n","      <td>Homoine</td>\n","      <td>Armed Assault</td>\n","      <td>Private Citizens &amp; Property</td>\n","      <td>Village/City/Town/Suburb</td>\n","      <td>Town of Homoine</td>\n","      <td>Mozambique</td>\n","      <td>Mozambique National Resistance Movement (MNR)</td>\n","      <td>Firearms</td>\n","      <td>Automatic firearm</td>\n","      <td>388.0</td>\n","    </tr>\n","    <tr>\n","      <th>25532</th>\n","      <td>1985</td>\n","      <td>Canada</td>\n","      <td>North America</td>\n","      <td>Toronto</td>\n","      <td>Bombing/Explosion</td>\n","      <td>Airports &amp; Aircraft</td>\n","      <td>Aircraft (not at an airport)</td>\n","      <td>Airliner (Air India) flight 182</td>\n","      <td>India</td>\n","      <td>Sikh Extremists</td>\n","      <td>Explosives</td>\n","      <td>Explosive</td>\n","      <td>329.0</td>\n","    </tr>\n","    <tr>\n","      <th>11636</th>\n","      <td>1980</td>\n","      <td>El Salvador</td>\n","      <td>Central America &amp; Caribbean</td>\n","      <td>Suchitoto</td>\n","      <td>Armed Assault</td>\n","      <td>Military</td>\n","      <td>Military Barracks/Base/Headquarters/Checkpost</td>\n","      <td>military post</td>\n","      <td>El Salvador</td>\n","      <td>Unknown</td>\n","      <td>Firearms</td>\n","      <td>Automatic firearm</td>\n","      <td>300.0</td>\n","    </tr>\n","    <tr>\n","      <th>20984</th>\n","      <td>1984</td>\n","      <td>Sudan</td>\n","      <td>Sub-Saharan Africa</td>\n","      <td>Heglig</td>\n","      <td>Bombing/Explosion</td>\n","      <td>Maritime</td>\n","      <td>Civilian Maritime</td>\n","      <td>Nile river passenger steamer with 800 passenge...</td>\n","      <td>Sudan</td>\n","      <td>Christian extremists</td>\n","      <td>Unknown</td>\n","      <td>Attacked; Shell</td>\n","      <td>300.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2281bbf3-666e-4e29-a8a5-1f193d785b1c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-65b70eb9-9ead-4317-ae27-6219b6837ad4\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-65b70eb9-9ead-4317-ae27-6219b6837ad4')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-65b70eb9-9ead-4317-ae27-6219b6837ad4 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2281bbf3-666e-4e29-a8a5-1f193d785b1c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2281bbf3-666e-4e29-a8a5-1f193d785b1c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["kill_per_country_df = cases_group_by_sum(df, 'country', 'nkill')\n","kill_per_country_df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"Dbs4U0Dq7OTr","executionInfo":{"status":"ok","timestamp":1689954868511,"user_tz":-330,"elapsed":386,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"aaf67e0b-f04b-4182-ff45-9a93cad352cb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["        country    nkill\n","36  El Salvador  10916.0\n","87    Nicaragua  10394.0\n","96         Peru   7499.0\n","25     Colombia   5581.0\n","48    Guatemala   4832.0\n"]},{"output_type":"execute_result","data":{"text/plain":["            country    nkill\n","36      El Salvador  10916.0\n","87        Nicaragua  10394.0\n","96             Peru   7499.0\n","25         Colombia   5581.0\n","48        Guatemala   4832.0\n","114       Sri Lanka   3917.0\n","97      Philippines   2947.0\n","130  United Kingdom   2777.0\n","67          Lebanon   2692.0\n","55            India   2289.0"],"text/html":["\n","\n","  <div id=\"df-bf50a124-0377-4b29-a5a9-b15990b8a63a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>nkill</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>36</th>\n","      <td>El Salvador</td>\n","      <td>10916.0</td>\n","    </tr>\n","    <tr>\n","      <th>87</th>\n","      <td>Nicaragua</td>\n","      <td>10394.0</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>Peru</td>\n","      <td>7499.0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Colombia</td>\n","      <td>5581.0</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>Guatemala</td>\n","      <td>4832.0</td>\n","    </tr>\n","    <tr>\n","      <th>114</th>\n","      <td>Sri Lanka</td>\n","      <td>3917.0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>Philippines</td>\n","      <td>2947.0</td>\n","    </tr>\n","    <tr>\n","      <th>130</th>\n","      <td>United Kingdom</td>\n","      <td>2777.0</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>Lebanon</td>\n","      <td>2692.0</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>India</td>\n","      <td>2289.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf50a124-0377-4b29-a5a9-b15990b8a63a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-b9449e9a-3f91-405c-860d-1bede47b6175\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9449e9a-3f91-405c-860d-1bede47b6175')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-b9449e9a-3f91-405c-860d-1bede47b6175 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bf50a124-0377-4b29-a5a9-b15990b8a63a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bf50a124-0377-4b29-a5a9-b15990b8a63a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["10916.0 were killed in El Salvador which is the highest number according to the dataset"],"metadata":{"id":"YXSryGrLKYCa"}},{"cell_type":"markdown","source":[],"metadata":{"id":"DCRZq4UjKUX1"}},{"cell_type":"markdown","source":["**Analysis No 4 :-** **World Analysis**"],"metadata":{"id":"EA8bxcpu7w8l"}},{"cell_type":"markdown","source":["cases by year"],"metadata":{"id":"zlbmMA0v70Oy"}},{"cell_type":"code","source":["# Total cases\n","cases_by_year_df = cases_group_by_count(df,\"year\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bzxPtOnS7fWM","executionInfo":{"status":"ok","timestamp":1689955026680,"user_tz":-330,"elapsed":401,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"17e23114-2b58-4c38-9601-de7964181f5f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  Number of Cases\n","18  1988             3709\n","17  1987             3142\n","14  1984             3106\n","16  1986             2818\n","13  1983             2736\n"]}]},{"cell_type":"code","source":["# Extended cases (incident extended more than 24 hours)\n","extended_cases_group_by_df = cases_group_by_sum(df,'year','extended')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xKPMwNzO7v_b","executionInfo":{"status":"ok","timestamp":1689955030443,"user_tz":-330,"elapsed":6,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"c543b190-dddd-4354-a7bf-dcd75338a49c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  extended\n","18  1988        62\n","9   1979        45\n","15  1985        42\n","11  1981        38\n","13  1983        37\n"]}]},{"cell_type":"code","source":["# Success cases\n","success_cases_group_by_df = cases_group_by_sum(df,'year','success')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"81xInzYh794C","executionInfo":{"status":"ok","timestamp":1689955049991,"user_tz":-330,"elapsed":364,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"6840dd30-8ca8-4758-da8e-f3489d5e6a23"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  success\n","18  1988   3430.0\n","14  1984   2907.0\n","17  1987   2892.0\n","16  1986   2628.0\n","13  1983   2530.0\n"]}]},{"cell_type":"code","source":["# Suicide cases\n","suicide_cases_group_by_df = cases_group_by_sum(df,'year','suicide')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2BIxr7Sb8AIL","executionInfo":{"status":"ok","timestamp":1689955054751,"user_tz":-330,"elapsed":430,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"740873fc-0458-4f98-a541-fed962228685"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  suicide\n","15  1985     16.0\n","13  1983      5.0\n","17  1987      3.0\n","16  1986      3.0\n","18  1988      2.0\n"]}]},{"cell_type":"code","source":["cases_by_year_df = pd.merge(cases_by_year_df, extended_cases_group_by_df, on = 'year', how='left').merge(success_cases_group_by_df, on = 'year').merge(suicide_cases_group_by_df, on = 'year')\n","cases_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"bAkVa96w8CFQ","executionInfo":{"status":"ok","timestamp":1689955059391,"user_tz":-330,"elapsed":465,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"8485076d-ac72-4d1e-ca41-f5436155ea31"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   year  Number of Cases  extended  success  suicide\n","0  1988             3709        62   3430.0      2.0\n","1  1987             3142        37   2892.0      3.0\n","2  1984             3106        30   2907.0      2.0\n","3  1986             2818        37   2628.0      3.0\n","4  1983             2736        37   2530.0      5.0"],"text/html":["\n","\n","  <div id=\"df-01e3d14e-6265-408d-82c5-c17312c13498\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>Number of Cases</th>\n","      <th>extended</th>\n","      <th>success</th>\n","      <th>suicide</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1988</td>\n","      <td>3709</td>\n","      <td>62</td>\n","      <td>3430.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1987</td>\n","      <td>3142</td>\n","      <td>37</td>\n","      <td>2892.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1984</td>\n","      <td>3106</td>\n","      <td>30</td>\n","      <td>2907.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1986</td>\n","      <td>2818</td>\n","      <td>37</td>\n","      <td>2628.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1983</td>\n","      <td>2736</td>\n","      <td>37</td>\n","      <td>2530.0</td>\n","      <td>5.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-01e3d14e-6265-408d-82c5-c17312c13498')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-b5623bb4-f483-429d-88e0-8b82b99e2db2\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b5623bb4-f483-429d-88e0-8b82b99e2db2')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-b5623bb4-f483-429d-88e0-8b82b99e2db2 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-01e3d14e-6265-408d-82c5-c17312c13498 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-01e3d14e-6265-408d-82c5-c17312c13498');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["# Create a line chart using Plotly\n","cases_by_year_df = cases_by_year_df.sort_values('year', ascending=False)\n","\n","fig = go.Figure(data=go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['Number of Cases']))\n","\n","fig.update_layout(title='Cases over Time', xaxis_title='Year', yaxis_title='Cases')\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"pvfemhzj8HcH","executionInfo":{"status":"ok","timestamp":1689955074343,"user_tz":-330,"elapsed":404,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"ff0c0529-6b8d-491a-cdd0-96b9130951cf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"0f10c8f4-e476-4ad7-8562-522a14e6c480\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"0f10c8f4-e476-4ad7-8562-522a14e6c480\")) {                    Plotly.newPlot(                        \"0f10c8f4-e476-4ad7-8562-522a14e6c480\",                        [{\"x\":[1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970],\"y\":[149,3709,3142,2818,2543,3106,2736,2451,2504,2510,2394,1464,1230,898,730,577,472,533,465,645],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Cases over Time\"},\"xaxis\":{\"title\":{\"text\":\"Year\"}},\"yaxis\":{\"title\":{\"text\":\"Cases\"}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('0f10c8f4-e476-4ad7-8562-522a14e6c480');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["in 1988, 3709 cases were recorded which is the most  "],"metadata":{"id":"gJ-I8CQz3F34"}},{"cell_type":"code","source":["# Create a line chart using Plotly\n","cases_by_year_df = cases_by_year_df.sort_values('year', ascending=False)\n","\n","# Create Scatter traces for extended cases and success cases and suicide cases\n","total_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['Number of Cases'], mode='lines', name='Total cases')\n","success_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['success'], mode='lines', name='Success cases')\n","extended_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['extended'], mode='lines', name='Extended cases')\n","suicide_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['suicide'], mode='lines', name='Suicide cases')\n","\n","# Add traces to a single Figure object\n","fig = go.Figure(data=[total_cases, success_cases, extended_cases, suicide_cases])\n","fig.update_layout(title='Cases over Time', xaxis_title='Year', yaxis_title='Cases')\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"7zSirbwu8Kon","executionInfo":{"status":"ok","timestamp":1689955081313,"user_tz":-330,"elapsed":440,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"838ddea1-cd88-4c91-c5bf-b4362f2a934a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"7bf41a53-966b-4225-b0cb-31d90949b3e7\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"7bf41a53-966b-4225-b0cb-31d90949b3e7\")) {                    Plotly.newPlot(                        \"7bf41a53-966b-4225-b0cb-31d90949b3e7\",                        [{\"mode\":\"lines\",\"name\":\"Total cases\",\"x\":[1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970],\"y\":[149,3709,3142,2818,2543,3106,2736,2451,2504,2510,2394,1464,1230,898,730,577,472,533,465,645],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Success cases\",\"x\":[1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970],\"y\":[137.0,3430.0,2892.0,2628.0,2365.0,2907.0,2530.0,2281.0,2272.0,2252.0,2146.0,1350.0,1104.0,837.0,695.0,541.0,432.0,445.0,414.0,543.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Extended cases\",\"x\":[1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970],\"y\":[4,62,37,37,42,30,37,20,38,32,45,33,36,27,25,19,30,8,6,28],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Suicide cases\",\"x\":[1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970],\"y\":[0.0,2.0,3.0,3.0,16.0,2.0,5.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Cases over Time\"},\"xaxis\":{\"title\":{\"text\":\"Year\"}},\"yaxis\":{\"title\":{\"text\":\"Cases\"}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('7bf41a53-966b-4225-b0cb-31d90949b3e7');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["Percentage of extended cases"],"metadata":{"id":"SHIDjKvm8Uzs"}},{"cell_type":"code","source":["# Calculate the percentage\n","cases_by_year_df['extended_percentage'] = cases_by_year_df['extended'] / cases_by_year_df['Number of Cases'] * 100\n","cases_by_year_df['success_percentage'] = cases_by_year_df['success'] / cases_by_year_df['Number of Cases'] * 100\n","cases_by_year_df['suicide_percentage'] = cases_by_year_df['suicide'] / cases_by_year_df['Number of Cases'] * 100\n","\n","# Create a Plotly trace\n","extended = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['extended_percentage'], fill='tozeroy', mode='none', fillcolor='red', line=dict(width=0))\n","success = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['success_percentage'], fill='tozeroy', mode='none', fillcolor='blue', line=dict(width=0))\n","suicide = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['suicide_percentage'], fill='tozeroy', mode='none', fillcolor='orange', line=dict(width=0))\n","\n","# Create a Plotly layout\n","layout = go.Layout(title='Percentage over Time',\n","                   xaxis=dict(title='Year'),\n","                   yaxis=dict(title='Percentage'))\n","\n","# Create a Plotly figure\n","fig = go.Figure(data=[extended, success, suicide], layout=layout)\n","\n","# Display the figure\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"olkzQbkC8TRp","executionInfo":{"status":"ok","timestamp":1689955108445,"user_tz":-330,"elapsed":13,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"c8735c0e-1c5f-4032-8c2a-7dcbfdeb2e15"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"ee6a6a55-5a77-4a80-97bc-d4bafafd57aa\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ee6a6a55-5a77-4a80-97bc-d4bafafd57aa\")) {                    Plotly.newPlot(                        \"ee6a6a55-5a77-4a80-97bc-d4bafafd57aa\",                        [{\"fill\":\"tozeroy\",\"fillcolor\":\"red\",\"line\":{\"width\":0},\"mode\":\"none\",\"x\":[1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970],\"y\":[2.684563758389262,1.6716095982744674,1.1775938892425206,1.312987934705465,1.6515926071569011,0.9658725048293626,1.3523391812865497,0.8159934720522236,1.5175718849840254,1.2749003984063745,1.8796992481203008,2.2540983606557377,2.9268292682926833,3.0066815144766146,3.4246575342465753,3.2928942807625647,6.3559322033898304,1.5009380863039399,1.2903225806451613,4.341085271317829],\"type\":\"scatter\"},{\"fill\":\"tozeroy\",\"fillcolor\":\"blue\",\"line\":{\"width\":0},\"mode\":\"none\",\"x\":[1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970],\"y\":[91.94630872483222,92.4777568077649,92.04328453214514,93.25762952448545,93.00039323633503,93.59304571796523,92.47076023391813,93.06405548755609,90.73482428115017,89.7211155378486,89.640768588137,92.21311475409836,89.75609756097562,93.20712694877506,95.2054794520548,93.76083188908146,91.52542372881356,83.48968105065666,89.03225806451613,84.18604651162791],\"type\":\"scatter\"},{\"fill\":\"tozeroy\",\"fillcolor\":\"orange\",\"line\":{\"width\":0},\"mode\":\"none\",\"x\":[1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970],\"y\":[0.0,0.05392289026691831,0.09548058561425843,0.10645848119233499,0.6291781360597719,0.0643915003219575,0.18274853801169588,0.04079967360261118,0.039936102236421724,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"}],                        {\"title\":{\"text\":\"Percentage over Time\"},\"xaxis\":{\"title\":{\"text\":\"Year\"}},\"yaxis\":{\"title\":{\"text\":\"Percentage\"}},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('ee6a6a55-5a77-4a80-97bc-d4bafafd57aa');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["Average number of months terrorism happened each year"],"metadata":{"id":"9cY7Z7vT8gwv"}},{"cell_type":"code","source":["avg_months_by_year_df = cases_group_by_avg(df, \"year\", \"number_of_months\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vQi0O-Vj8biV","executionInfo":{"status":"ok","timestamp":1689955173897,"user_tz":-330,"elapsed":459,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"54d2a61e-e0f7-4fa1-806b-e3a5a13475dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  number_of_months\n","2   1972               7.0\n","4   1974               7.0\n","5   1975               7.0\n","7   1977               7.0\n","15  1985               7.0\n"]}]},{"cell_type":"code","source":["# Create a bar chart using Plotly\n","fig = go.Figure(data=go.Bar(x=avg_months_by_year_df['year'], y=avg_months_by_year_df['number_of_months']))\n","fig.update_layout(title='Average number of months by Year', xaxis_title='Year', yaxis_title='Average number of months')\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"UE4OX1EQ8kRP","executionInfo":{"status":"ok","timestamp":1689955216755,"user_tz":-330,"elapsed":370,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"fb57cb0f-fdc9-4cc8-a8ee-e76f9d6d2044"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"f68996e2-d6d2-4cd9-8a72-de098521cfc2\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"f68996e2-d6d2-4cd9-8a72-de098521cfc2\")) {                    Plotly.newPlot(                        \"f68996e2-d6d2-4cd9-8a72-de098521cfc2\",                        [{\"x\":[1972,1974,1975,1977,1985,1981,1970,1983,1988,1987,1986,1984,1980,1982,1971,1979,1978,1976,1973,1989],\"y\":[7.0,7.0,7.0,7.0,7.0,7.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,1.0],\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Average number of months by Year\"},\"xaxis\":{\"title\":{\"text\":\"Year\"}},\"yaxis\":{\"title\":{\"text\":\"Average number of months\"}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('f68996e2-d6d2-4cd9-8a72-de098521cfc2');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["Average number of days per month terrorism happened each year"],"metadata":{"id":"WZlVLSbT8qBS"}},{"cell_type":"code","source":["avg_days_by_year_df = cases_group_by_avg(df, \"year\", \"number_of_days\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JeKAHH_U8mmu","executionInfo":{"status":"ok","timestamp":1689955251467,"user_tz":-330,"elapsed":686,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"dbfd96fa-5c1a-436d-f37e-fe2638cbf61c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  number_of_days\n","2   1972            17.0\n","18  1988            16.0\n","17  1987            16.0\n","16  1986            16.0\n","0   1970            15.0\n"]}]},{"cell_type":"code","source":["# Create a bar chart using Plotly\n","fig = go.Figure(data=go.Bar(x=avg_days_by_year_df['year'], y=avg_days_by_year_df['number_of_days']))\n","fig.update_layout(title='Average number of days per month by Year', xaxis_title='Year', yaxis_title='Average number of days per month')\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"ZGwawiDv8s4f","executionInfo":{"status":"ok","timestamp":1689955268638,"user_tz":-330,"elapsed":784,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"0e0bf097-c840-4f01-afbd-17e87ac5103b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"fa80d950-2175-4f3b-812b-9a9f4cb78107\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"fa80d950-2175-4f3b-812b-9a9f4cb78107\")) {                    Plotly.newPlot(                        \"fa80d950-2175-4f3b-812b-9a9f4cb78107\",                        [{\"x\":[1972,1988,1987,1986,1970,1981,1985,1984,1983,1982,1980,1971,1979,1978,1977,1976,1975,1974,1973,1989],\"y\":[17.0,16.0,16.0,16.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,9.0],\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Average number of days per month by Year\"},\"xaxis\":{\"title\":{\"text\":\"Year\"}},\"yaxis\":{\"title\":{\"text\":\"Average number of days per month\"}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('fa80d950-2175-4f3b-812b-9a9f4cb78107');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["From the above bar chart we can say that the average no days are constant at 15 but in 1989 it suddenly declined to 9"],"metadata":{"id":"4R8oo2viLzXf"}},{"cell_type":"markdown","source":["**Analysis No 5 :-Attack types**"],"metadata":{"id":"7_v3Cqkr8xjd"}},{"cell_type":"code","source":["cases_per_atk_type = plot_bar(df,\"attack_type\")\n","cases_per_atk_type"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":960},"id":"RmgP_b_58vGi","executionInfo":{"status":"ok","timestamp":1689955377468,"user_tz":-330,"elapsed":740,"user":{"displayName":"Om Patil","userId":"11394423417933586840"}},"outputId":"779e2246-a9a3-4080-fccb-fe0ca3a0f3c1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                      attack_type  Number of Cases\n","2               Bombing/Explosion            15399\n","0                   Armed Assault             7871\n","1                   Assassination             6169\n","3  Facility/Infrastructure Attack             2239\n","6     Hostage Taking (Kidnapping)             1522\n"]},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"43031046-9028-49bf-93ec-b49cbb8df865\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"43031046-9028-49bf-93ec-b49cbb8df865\")) {                    Plotly.newPlot(                        \"43031046-9028-49bf-93ec-b49cbb8df865\",                        [{\"x\":[\"Bombing/Explosion\",\"Armed Assault\",\"Assassination\",\"Facility/Infrastructure Attack\",\"Hostage Taking (Kidnapping)\",\"Unknown\",\"Hostage Taking (Barricade Incident)\",\"Hijacking\",\"Unarmed Assault\"],\"y\":[15399,7871,6169,2239,1522,1203,453,158,61],\"type\":\"bar\"}],                        {\"xaxis\":{\"title\":{\"text\":\"attack_type\"}},\"yaxis\":{\"title\":{\"text\":\"Number of Cases\"}},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('43031046-9028-49bf-93ec-b49cbb8df865');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["                           attack_type  Number of Cases\n","2                    Bombing/Explosion            15399\n","0                        Armed Assault             7871\n","1                        Assassination             6169\n","3       Facility/Infrastructure Attack             2239\n","6          Hostage Taking (Kidnapping)             1522\n","8                              Unknown             1203\n","5  Hostage Taking (Barricade Incident)              453\n","4                            Hijacking              158\n","7                      Unarmed Assault               61"],"text/html":["\n","\n","  <div id=\"df-9781ce1d-00bc-46bf-8c7f-cd7df3bcc4c4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>attack_type</th>\n","      <th>Number of Cases</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>Bombing/Explosion</td>\n","      <td>15399</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Armed Assault</td>\n","      <td>7871</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Assassination</td>\n","      <td>6169</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Facility/Infrastructure Attack</td>\n","      <td>2239</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hostage Taking (Kidnapping)</td>\n","      <td>1522</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Unknown</td>\n","      <td>1203</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Hostage Taking (Barricade Incident)</td>\n","      <td>453</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Hijacking</td>\n","      <td>158</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Unarmed Assault</td>\n","      <td>61</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9781ce1d-00bc-46bf-8c7f-cd7df3bcc4c4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-715989f3-eda4-41e3-b65d-93e0b4830399\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-715989f3-eda4-41e3-b65d-93e0b4830399')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-715989f3-eda4-41e3-b65d-93e0b4830399 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9781ce1d-00bc-46bf-8c7f-cd7df3bcc4c4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9781ce1d-00bc-46bf-8c7f-cd7df3bcc4c4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["From the above analysis bombing/explosion is what terrorist likes to do as it has the highest number"],"metadata":{"id":"GtAOjeYGMQaO"}},{"cell_type":"markdown","source":["**Analysis No 6 :- Attack types by year**"],"metadata":{"id":"1Oh4DO8X85N8"}},{"cell_type":"code","source":["# Total explosion cases\n","explosion_by_year_df = cases_group_by_count(df[df.attack_type=='Bombing/Explosion'],\"year\")\n","explosion_by_year_df.rename(columns={'Number of Cases': 'Explosion'}, inplace=True)\n","explosion_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"iLtZWpvB8zsI","executionInfo":{"status":"ok","timestamp":1687346385911,"user_tz":-330,"elapsed":73,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"6e86bb01-7045-40b5-f53e-37d14f38dc6d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  Number of Cases\n","21  1991             1981\n","19  1989             1779\n","22  1992             1730\n","20  1990             1727\n","18  1988             1643\n"]},{"output_type":"execute_result","data":{"text/plain":["    year  Explosion\n","21  1991       1981\n","19  1989       1779\n","22  1992       1730\n","20  1990       1727\n","18  1988       1643"],"text/html":["\n","  <div id=\"df-6e7c0821-1a35-456b-b2bf-fdebff80a304\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>Explosion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>21</th>\n","      <td>1991</td>\n","      <td>1981</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1989</td>\n","      <td>1779</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>1992</td>\n","      <td>1730</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>1990</td>\n","      <td>1727</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1988</td>\n","      <td>1643</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e7c0821-1a35-456b-b2bf-fdebff80a304')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6e7c0821-1a35-456b-b2bf-fdebff80a304 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6e7c0821-1a35-456b-b2bf-fdebff80a304');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["# Total Armed Assault cases\n","armed_assault_by_year_df = cases_group_by_count(df[df.attack_type=='Armed Assault'],\"year\")\n","armed_assault_by_year_df.rename(columns={'Number of Cases': 'Armed_Assault'}, inplace=True)\n","armed_assault_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"ZdodiF_V8-Cp","executionInfo":{"status":"ok","timestamp":1687346385911,"user_tz":-330,"elapsed":70,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"9677ffb7-e970-417e-93e9-41dec86b82f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  Number of Cases\n","22  1992             1319\n","21  1991             1269\n","19  1989             1108\n","18  1988              919\n","20  1990              858\n"]},{"output_type":"execute_result","data":{"text/plain":["    year  Armed_Assault\n","22  1992           1319\n","21  1991           1269\n","19  1989           1108\n","18  1988            919\n","20  1990            858"],"text/html":["\n","  <div id=\"df-fc379a79-e8e6-40e2-8d15-ce21799bbf96\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>Armed_Assault</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>22</th>\n","      <td>1992</td>\n","      <td>1319</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>1991</td>\n","      <td>1269</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1989</td>\n","      <td>1108</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1988</td>\n","      <td>919</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>1990</td>\n","      <td>858</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc379a79-e8e6-40e2-8d15-ce21799bbf96')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fc379a79-e8e6-40e2-8d15-ce21799bbf96 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fc379a79-e8e6-40e2-8d15-ce21799bbf96');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["# Total Assassination cases\n","assassination_by_year_df = cases_group_by_count(df[df.attack_type=='Assassination'],\"year\")\n","assassination_by_year_df.rename(columns={'Number of Cases': 'Assassination'}, inplace=True)\n","assassination_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"KhM9dXeu9Ay4","executionInfo":{"status":"ok","timestamp":1687346385912,"user_tz":-330,"elapsed":69,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"4fa8df00-cf19-460f-dd02-bed41f25daae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  Number of Cases\n","22  1992             1100\n","19  1989              978\n","20  1990              872\n","18  1988              820\n","23  1994              760\n"]},{"output_type":"execute_result","data":{"text/plain":["    year  Assassination\n","22  1992           1100\n","19  1989            978\n","20  1990            872\n","18  1988            820\n","23  1994            760"],"text/html":["\n","  <div id=\"df-b96a5320-2b8d-474f-bca0-06df0f781d89\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>Assassination</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>22</th>\n","      <td>1992</td>\n","      <td>1100</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1989</td>\n","      <td>978</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>1990</td>\n","      <td>872</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1988</td>\n","      <td>820</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>1994</td>\n","      <td>760</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b96a5320-2b8d-474f-bca0-06df0f781d89')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b96a5320-2b8d-474f-bca0-06df0f781d89 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b96a5320-2b8d-474f-bca0-06df0f781d89');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["# Total Kidnapping cases\n","kidnapping_by_year_df = cases_group_by_count(df[df.attack_type=='Hostage Taking (Kidnapping)'],\"year\")\n","kidnapping_by_year_df.rename(columns={'Number of Cases': 'Kidnapping'}, inplace=True)\n","kidnapping_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"pyzsuMux9C-j","executionInfo":{"status":"ok","timestamp":1687346385912,"user_tz":-330,"elapsed":66,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"04492137-ae8e-40fd-8c46-6b5ac8b5c8a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  Number of Cases\n","26  1997              278\n","21  1991              204\n","23  1994              191\n","20  1990              168\n","25  1996              155\n"]},{"output_type":"execute_result","data":{"text/plain":["    year  Kidnapping\n","26  1997         278\n","21  1991         204\n","23  1994         191\n","20  1990         168\n","25  1996         155"],"text/html":["\n","  <div id=\"df-bad7a55d-3650-4752-8cd1-9755186ebbeb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>Kidnapping</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>26</th>\n","      <td>1997</td>\n","      <td>278</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>1991</td>\n","      <td>204</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>1994</td>\n","      <td>191</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>1990</td>\n","      <td>168</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>1996</td>\n","      <td>155</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bad7a55d-3650-4752-8cd1-9755186ebbeb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bad7a55d-3650-4752-8cd1-9755186ebbeb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bad7a55d-3650-4752-8cd1-9755186ebbeb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["# Total Facility/Infrastructure Attack cases\n","infra_atk_by_year_df = cases_group_by_count(df[df.attack_type=='Facility/Infrastructure Attack'],\"year\")\n","infra_atk_by_year_df.rename(columns={'Number of Cases': 'Facility_Attack'}, inplace=True)\n","infra_atk_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"VsSXFnj49FbR","executionInfo":{"status":"ok","timestamp":1687346385912,"user_tz":-330,"elapsed":63,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"4fcc2d25-cb73-435d-ccc4-f2575e8be02d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  Number of Cases\n","22  1992              449\n","21  1991              350\n","24  1995              289\n","19  1989              240\n","25  1996              209\n"]},{"output_type":"execute_result","data":{"text/plain":["    year  Facility_Attack\n","22  1992              449\n","21  1991              350\n","24  1995              289\n","19  1989              240\n","25  1996              209"],"text/html":["\n","  <div id=\"df-5423e3d9-9374-441b-94ee-3437c0b38b72\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>Facility_Attack</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>22</th>\n","      <td>1992</td>\n","      <td>449</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>1991</td>\n","      <td>350</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>1995</td>\n","      <td>289</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1989</td>\n","      <td>240</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>1996</td>\n","      <td>209</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5423e3d9-9374-441b-94ee-3437c0b38b72')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5423e3d9-9374-441b-94ee-3437c0b38b72 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5423e3d9-9374-441b-94ee-3437c0b38b72');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["# Total Unarmed Assault Attack cases\n","unarmed_assault_by_year_df = cases_group_by_count(df[df.attack_type=='Unarmed Assault'],\"year\")\n","unarmed_assault_by_year_df.rename(columns={'Number of Cases': 'Unarmed_Assault'}, inplace=True)\n","unarmed_assault_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"IvqzKU8s9Hfx","executionInfo":{"status":"ok","timestamp":1687346385912,"user_tz":-330,"elapsed":61,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"71939b1e-30b0-4a96-a6a7-7d42d3cad7bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  Number of Cases\n","20  1995               99\n","19  1994               61\n","18  1992               46\n","24  1999               36\n","25  2000               26\n"]},{"output_type":"execute_result","data":{"text/plain":["    year  Unarmed_Assault\n","20  1995               99\n","19  1994               61\n","18  1992               46\n","24  1999               36\n","25  2000               26"],"text/html":["\n","  <div id=\"df-1f0ceca2-ca7f-4b79-bc2f-8d913a828268\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>Unarmed_Assault</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>20</th>\n","      <td>1995</td>\n","      <td>99</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1994</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1992</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>1999</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2000</td>\n","      <td>26</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f0ceca2-ca7f-4b79-bc2f-8d913a828268')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1f0ceca2-ca7f-4b79-bc2f-8d913a828268 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1f0ceca2-ca7f-4b79-bc2f-8d913a828268');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":105}]},{"cell_type":"code","source":["# Total Unknown cases\n","unknown_by_year_df = cases_group_by_count(df[df.attack_type=='Unknown'],\"year\")\n","unknown_by_year_df.rename(columns={'Number of Cases': 'Unknown'}, inplace=True)\n","unknown_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"7eHC638x9JeK","executionInfo":{"status":"ok","timestamp":1687346385912,"user_tz":-330,"elapsed":58,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"cd5bc777-94c5-4b4f-ca38-548425dbd073"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  Number of Cases\n","26  1997              333\n","25  1996              272\n","24  1995              222\n","23  1994              204\n","22  1992              187\n"]},{"output_type":"execute_result","data":{"text/plain":["    year  Unknown\n","26  1997      333\n","25  1996      272\n","24  1995      222\n","23  1994      204\n","22  1992      187"],"text/html":["\n","  <div id=\"df-39ab8b12-4355-444d-a2ad-73c034db9d4b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>Unknown</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>26</th>\n","      <td>1997</td>\n","      <td>333</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>1996</td>\n","      <td>272</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>1995</td>\n","      <td>222</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>1994</td>\n","      <td>204</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>1992</td>\n","      <td>187</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39ab8b12-4355-444d-a2ad-73c034db9d4b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-39ab8b12-4355-444d-a2ad-73c034db9d4b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-39ab8b12-4355-444d-a2ad-73c034db9d4b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":106}]},{"cell_type":"code","source":["# Total Barricade Incident cases\n","barricade_incident_by_year_df = cases_group_by_count(df[df.attack_type=='Hostage Taking (Barricade Incident)'],\"year\")\n","barricade_incident_by_year_df.rename(columns={'Number of Cases': 'Barricade_Incident'}, inplace=True)\n","barricade_incident_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"vNTXwpf69LVS","executionInfo":{"status":"ok","timestamp":1687346385913,"user_tz":-330,"elapsed":56,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"f378df36-41b9-4733-c5f7-ea1a6e5433cb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  Number of Cases\n","9   1979               63\n","12  1982               49\n","15  1985               48\n","8   1978               43\n","10  1980               40\n"]},{"output_type":"execute_result","data":{"text/plain":["    year  Barricade_Incident\n","9   1979                  63\n","12  1982                  49\n","15  1985                  48\n","8   1978                  43\n","10  1980                  40"],"text/html":["\n","  <div id=\"df-1a3d7a2c-33ae-42b7-964e-a7ec3ba4ac1c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>Barricade_Incident</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9</th>\n","      <td>1979</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>1982</td>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1985</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1978</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1980</td>\n","      <td>40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a3d7a2c-33ae-42b7-964e-a7ec3ba4ac1c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1a3d7a2c-33ae-42b7-964e-a7ec3ba4ac1c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1a3d7a2c-33ae-42b7-964e-a7ec3ba4ac1c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["# Total Hijacking cases\n","hijacking_by_year_df = cases_group_by_count(df[df.attack_type=='Hijacking'],\"year\")\n","hijacking_by_year_df.rename(columns={'Number of Cases': 'Hijacking'}, inplace=True)\n","hijacking_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"wB6MkbaQ9NIV","executionInfo":{"status":"ok","timestamp":1687346385913,"user_tz":-330,"elapsed":53,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"20f91fa2-7347-430d-b4cf-4958e47cc7a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year  Number of Cases\n","22  1994               37\n","23  1995               30\n","20  1991               25\n","21  1992               24\n","24  1996               23\n"]},{"output_type":"execute_result","data":{"text/plain":["    year  Hijacking\n","22  1994         37\n","23  1995         30\n","20  1991         25\n","21  1992         24\n","24  1996         23"],"text/html":["\n","  <div id=\"df-1ef833f6-9ef5-4715-9e4b-707c0000d405\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>Hijacking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>22</th>\n","      <td>1994</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>1995</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>1991</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>1992</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>1996</td>\n","      <td>23</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ef833f6-9ef5-4715-9e4b-707c0000d405')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1ef833f6-9ef5-4715-9e4b-707c0000d405 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1ef833f6-9ef5-4715-9e4b-707c0000d405');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["cases_by_year_df = pd.merge(explosion_by_year_df, armed_assault_by_year_df, on = 'year', how='left').merge(assassination_by_year_df, on = 'year').merge(kidnapping_by_year_df, on = 'year').merge(infra_atk_by_year_df, on = 'year').merge(unarmed_assault_by_year_df, on = 'year').merge(unknown_by_year_df, on = 'year').merge(barricade_incident_by_year_df, on = 'year').merge(hijacking_by_year_df, on = 'year')\n","\n","cases_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"bd9AcqwN9O46","executionInfo":{"status":"ok","timestamp":1687346385913,"user_tz":-330,"elapsed":51,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"646d1e2d-b2c1-4caa-d4ff-cb09ae48d041"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   year  Explosion  Armed_Assault  Assassination  Kidnapping  Facility_Attack  \\\n","0  1991       1981           1269            729         204              350   \n","1  1989       1779           1108            978         130              240   \n","2  1992       1730           1319           1100         140              449   \n","3  1990       1727            858            872         168              190   \n","4  1988       1643            919            820         109              149   \n","\n","   Unarmed_Assault  Unknown  Barricade_Incident  Hijacking  \n","0               14       64                  16         25  \n","1                8       17                  18         13  \n","2               46      187                  22         24  \n","3                7       13                  17          8  \n","4                5       39                  16          9  "],"text/html":["\n","  <div id=\"df-aea4c7b4-e4e5-437d-9b4f-e70187a764b2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>Explosion</th>\n","      <th>Armed_Assault</th>\n","      <th>Assassination</th>\n","      <th>Kidnapping</th>\n","      <th>Facility_Attack</th>\n","      <th>Unarmed_Assault</th>\n","      <th>Unknown</th>\n","      <th>Barricade_Incident</th>\n","      <th>Hijacking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1991</td>\n","      <td>1981</td>\n","      <td>1269</td>\n","      <td>729</td>\n","      <td>204</td>\n","      <td>350</td>\n","      <td>14</td>\n","      <td>64</td>\n","      <td>16</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1989</td>\n","      <td>1779</td>\n","      <td>1108</td>\n","      <td>978</td>\n","      <td>130</td>\n","      <td>240</td>\n","      <td>8</td>\n","      <td>17</td>\n","      <td>18</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1992</td>\n","      <td>1730</td>\n","      <td>1319</td>\n","      <td>1100</td>\n","      <td>140</td>\n","      <td>449</td>\n","      <td>46</td>\n","      <td>187</td>\n","      <td>22</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1990</td>\n","      <td>1727</td>\n","      <td>858</td>\n","      <td>872</td>\n","      <td>168</td>\n","      <td>190</td>\n","      <td>7</td>\n","      <td>13</td>\n","      <td>17</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1988</td>\n","      <td>1643</td>\n","      <td>919</td>\n","      <td>820</td>\n","      <td>109</td>\n","      <td>149</td>\n","      <td>5</td>\n","      <td>39</td>\n","      <td>16</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aea4c7b4-e4e5-437d-9b4f-e70187a764b2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aea4c7b4-e4e5-437d-9b4f-e70187a764b2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aea4c7b4-e4e5-437d-9b4f-e70187a764b2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":109}]},{"cell_type":"markdown","source":["These is the overall chart that tells us about different types of attacks"],"metadata":{"id":"0zH0fgQ135Wz"}},{"cell_type":"code","source":["# Create a line chart using Plotly\n","cases_by_year_df = cases_by_year_df.sort_values('year', ascending=False)\n","\n","# Create Scatter traces for extended cases and success cases and suicide cases\n","Explosion_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['Explosion'], mode='lines', name='Explosion')\n","Armed_Assault_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['Armed_Assault'], mode='lines', name='Armed_Assault')\n","Assassination_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['Assassination'], mode='lines', name='Assassination')\n","Kidnapping_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['Kidnapping'], mode='lines', name='Kidnapping')\n","Facility_Attack_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['Facility_Attack'], mode='lines', name='Facility_Attack')\n","Unarmed_Assault_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['Unarmed_Assault'], mode='lines', name='Unarmed_Assault')\n","Unknown_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['Unknown'], mode='lines', name='Unknown')\n","Barricade_Incident_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['Barricade_Incident'], mode='lines', name='Barricade_Incident')\n","Hijacking_cases = go.Scatter(x=cases_by_year_df['year'], y=cases_by_year_df['Hijacking'], mode='lines', name='Hijacking')\n","\n","# Add traces to a single Figure object\n","fig = go.Figure(data=[Explosion_cases, Armed_Assault_cases, Assassination_cases, Kidnapping_cases, Facility_Attack_cases,\n","                     Unarmed_Assault_cases, Unknown_cases, Barricade_Incident_cases, Hijacking_cases])\n","fig.update_layout(title='Cases over Time', xaxis_title='Year', yaxis_title='Cases')\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"2CbO3-bR9QvT","executionInfo":{"status":"ok","timestamp":1687346385913,"user_tz":-330,"elapsed":50,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"9f9866a3-d215-422f-eb37-a0c28bfd2d03"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"c71b5ead-0a9b-42b3-a042-8494ee1adf63\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c71b5ead-0a9b-42b3-a042-8494ee1adf63\")) {                    Plotly.newPlot(                        \"c71b5ead-0a9b-42b3-a042-8494ee1adf63\",                        [{\"mode\":\"lines\",\"name\":\"Explosion\",\"x\":[2001,2000,1999,1997,1996,1995,1994,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1976,1974,1973,1970],\"y\":[609,904,652,1090,1200,773,1139,1730,1981,1727,1779,1643,1463,1478,1180,1442,1138,1051,1031,912,880,398,282,148,328],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Armed_Assault\",\"x\":[2001,2000,1999,1997,1996,1995,1994,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1976,1974,1973,1970],\"y\":[397,493,367,783,599,580,801,1319,1269,858,1108,919,779,584,647,788,848,655,685,544,437,122,46,62,61],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Assassination\",\"x\":[2001,2000,1999,1997,1996,1995,1994,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1976,1974,1973,1970],\"y\":[93,103,61,374,450,654,760,1100,729,872,978,820,492,371,310,436,353,360,404,618,518,203,158,164,22],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Kidnapping\",\"x\":[2001,2000,1999,1997,1996,1995,1994,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1976,1974,1973,1970],\"y\":[105,125,114,278,155,141,191,140,204,168,130,109,99,96,114,77,124,104,118,140,146,45,37,43,38],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Facility_Attack\",\"x\":[2001,2000,1999,1997,1996,1995,1994,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1976,1974,1973,1970],\"y\":[127,111,114,129,209,289,184,449,350,190,240,149,118,135,100,155,133,142,139,143,162,112,41,36,174],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Unarmed_Assault\",\"x\":[2001,2000,1999,1997,1996,1995,1994,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1976,1974,1973,1970],\"y\":[19,26,36,25,23,99,61,46,14,7,8,5,3,6,5,7,2,3,3,2,7,3,4,3,3],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Unknown\",\"x\":[2001,2000,1999,1997,1996,1995,1994,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1976,1974,1973,1970],\"y\":[36,43,39,333,272,222,204,187,64,13,17,39,160,117,124,151,104,79,74,97,172,5,1,1,6],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Barricade_Incident\",\"x\":[2001,2000,1999,1997,1996,1995,1994,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1976,1974,1973,1970],\"y\":[3,2,6,3,15,14,34,22,16,17,18,16,26,27,48,29,26,49,34,40,63,6,5,7,2],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Hijacking\",\"x\":[2001,2000,1999,1997,1996,1995,1994,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1976,1974,1973,1970],\"y\":[10,7,6,16,23,30,37,24,25,8,13,9,2,4,15,21,8,8,16,14,9,4,3,8,11],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Cases over Time\"},\"xaxis\":{\"title\":{\"text\":\"Year\"}},\"yaxis\":{\"title\":{\"text\":\"Cases\"}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('c71b5ead-0a9b-42b3-a042-8494ee1adf63');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["From these line chart we can say that hijacking cases are very rare"],"metadata":{"id":"DflamlCq4F38"}},{"cell_type":"markdown","source":["**Analysis No 6 :-Target Type**"],"metadata":{"id":"lH6TLyg19emX"}},{"cell_type":"code","source":["cases_per_target_type = plot_bar(df,\"target_type\")\n","cases_per_target_type.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":835},"id":"xjIbbc7k9boj","executionInfo":{"status":"ok","timestamp":1687346385914,"user_tz":-330,"elapsed":50,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"64fa2e65-3d13-41ce-e675-bb6d088ac586"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                    target_type  Number of Cases\n","13  Private Citizens & Property            13418\n","2                      Business            11574\n","9                      Military             9666\n","6          Government (General)             9323\n","12                       Police             8034\n"]},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"c51389d8-6046-4e77-8247-b4ba0818091c\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c51389d8-6046-4e77-8247-b4ba0818091c\")) {                    Plotly.newPlot(                        \"c51389d8-6046-4e77-8247-b4ba0818091c\",                        [{\"x\":[\"Private Citizens & Property\",\"Business\",\"Military\",\"Government (General)\",\"Police\",\"Transportation\",\"Utilities\",\"Government (Diplomatic)\",\"Journalists & Media\",\"Religious Figures/Institutions\",\"Educational Institution\",\"Airports & Aircraft\",\"Terrorists/Non-State Militia\",\"Violent Political Party\",\"Unknown\",\"Telecommunication\",\"NGO\",\"Tourists\",\"Abortion Related\",\"Maritime\",\"Food or Water Supply\",\"Other\"],\"y\":[13418,11574,9666,9323,8034,3522,3283,2338,1591,1473,1410,1009,787,713,673,420,331,283,238,214,162,17],\"type\":\"bar\"}],                        {\"xaxis\":{\"title\":{\"text\":\"target_type\"}},\"yaxis\":{\"title\":{\"text\":\"Number of Cases\"}},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('c51389d8-6046-4e77-8247-b4ba0818091c');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["                    target_type  Number of Cases\n","13  Private Citizens & Property            13418\n","2                      Business            11574\n","9                      Military             9666\n","6          Government (General)             9323\n","12                       Police             8034"],"text/html":["\n","  <div id=\"df-c0be65f4-0ebb-4937-ba2e-028d559a005d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target_type</th>\n","      <th>Number of Cases</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>13</th>\n","      <td>Private Citizens &amp; Property</td>\n","      <td>13418</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Business</td>\n","      <td>11574</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Military</td>\n","      <td>9666</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Government (General)</td>\n","      <td>9323</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Police</td>\n","      <td>8034</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c0be65f4-0ebb-4937-ba2e-028d559a005d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c0be65f4-0ebb-4937-ba2e-028d559a005d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c0be65f4-0ebb-4937-ba2e-028d559a005d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":111}]},{"cell_type":"markdown","source":["**Analysis No 7:- Nationality**"],"metadata":{"id":"z7hFH7f59jaD"}},{"cell_type":"code","source":["cases_per_nationality = plot_bar(df,\"nationality\")\n","cases_per_nationality.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":835},"id":"3NT36k5V9gJn","executionInfo":{"status":"ok","timestamp":1687346385914,"user_tz":-330,"elapsed":47,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"42578726-7ce6-47be-9422-84d8e71508b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["       nationality  Number of Cases\n","35        Colombia             5940\n","144           Peru             5575\n","53     El Salvador             4806\n","192  United States             4062\n","81           India             3419\n"]},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"b5637d04-41b9-4dbb-929a-9e5ba71aa3cd\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"b5637d04-41b9-4dbb-929a-9e5ba71aa3cd\")) {                    Plotly.newPlot(                        \"b5637d04-41b9-4dbb-929a-9e5ba71aa3cd\",                        [{\"x\":[\"Colombia\",\"Peru\",\"El Salvador\",\"United States\",\"India\",\"Spain\",\"Turkey\",\"Northern Ireland\",\"Israel\",\"France\",\"Sri Lanka\",\"Philippines\",\"Chile\",\"Nicaragua\",\"South Africa\",\"Guatemala\",\"Great Britain\",\"Algeria\",\"Pakistan\",\"Italy\",\"Lebanon\",\"Germany\",\"Russia\",\"Argentina\",\"Iran\",\"Bangladesh\",\"West Bank and Gaza Strip\",\"Egypt\",\"Greece\",\"Japan\",\"Angola\",\"Indonesia\",\"International\",\"Mexico\",\"Syria\",\"Bolivia\",\"Burundi\",\"Venezuela\",\"Honduras\",\"Brazil\",\"Uganda\",\"Serbia-Montenegro\",\"Thailand\",\"Myanmar\",\"Soviet Union\",\"Mozambique\",\"Cambodia\",\"Haiti\",\"Iraq\",\"China\",\"Ecuador\",\"Afghanistan\",\"Ireland\",\"Portugal\",\"Namibia\",\"Yugoslavia\",\"Multinational\",\"Switzerland\",\"Rwanda\",\"Panama\",\"Tajikistan\",\"West Germany (FRG)\",\"Netherlands\",\"Cuba\",\"Georgia\",\"Belgium\",\"Nepal\",\"Bosnia-Herzegovina\",\"Somalia\",\"Nigeria\",\"Dominican Republic\",\"Rhodesia\",\"Senegal\",\"Kenya\",\"Sudan\",\"Australia\",\"Canada\",\"Jordan\",\"Albania\",\"Libya\",\"Yemen\",\"Puerto Rico\",\"Austria\",\"Saudi Arabia\",\"Zimbabwe\",\"Cyprus\",\"Kuwait\",\"Macedonia\",\"Sierra Leone\",\"Papua New Guinea\",\"Uruguay\",\"Suriname\",\"Ethiopia\",\"Zambia\",\"Sweden\",\"Costa Rica\",\"Poland\",\"Togo\",\"Bulgaria\",\"Hungary\",\"Malaysia\",\"Paraguay\",\"Taiwan\",\"South Korea\",\"Niger\",\"Vietnam\",\"Azerbaijan\",\"Zaire\",\"Mali\",\"Morocco\",\"Romania\",\"Armenia\",\"Bahrain\",\"Croatia\",\"Ukraine\",\"Denmark\",\"Lesotho\",\"Jamaica\",\"Kosovo\",\"Ghana\",\"Guinea\",\"Guyana\",\"Ivory Coast\",\"Cameroon\",\"Slovak Republic\",\"Liberia\",\"Tunisia\",\"Hong Kong\",\"Fiji\",\"United Arab Emirates\",\"Latvia\",\"Guadeloupe\",\"Macau\",\"Djibouti\",\"New Caledonia\",\"Malta\",\"Czech Republic\",\"Chad\",\"Laos\",\"Norway\",\"Trinidad and Tobago\",\"Luxembourg\",\"Republic of the Congo\",\"Democratic Republic of the Congo\",\"Madagascar\",\"Uzbekistan\",\"New Zealand\",\"Estonia\",\"Lithuania\",\"Tanzania\",\"Kyrgyzstan\",\"Kazakhstan\",\"Swaziland\",\"Botswana\",\"Finland\",\"Singapore\",\"Central African Republic\",\"Czechoslovakia\",\"North Korea\",\"Benin\",\"Vatican City\",\"Comoros\",\"Bahamas\",\"East Timor\",\"Malawi\",\"Moldova\",\"Slovenia\",\"Qatar\",\"Belarus\",\"Grenada\",\"Gabon\",\"Belize\",\"Gambia\",\"Eritrea\",\"Dominica\",\"Martinique\",\"Burkina Faso\",\"Corsica\",\"Mauritania\",\"Asian\",\"Vanuatu\",\"Barbados\",\"United Kingdom\",\"Iceland\",\"Mauritius\",\"St. Kitts and Nevis\",\"Solomon Islands\",\"Sinhalese\",\"Serbia\",\"French Guiana\",\"North Yemen\",\"Bhutan\",\"Guinea-Bissau\",\"Greenland\",\"Antigua and Barbuda\",\"Western Sahara\",\"Maldives\",\"Man, Isle of\",\"Equatorial Guinea\",\"Mongolia\",\"Montenegro\",\"St. Lucia\",\"Oman\",\"Commonwealth of Independent States\",\"Seychelles\",\"Brunei\",\"People's Republic of the Congo\"],\"y\":[5940,5575,4806,4062,3419,2792,2713,2650,2234,2212,2070,1975,1965,1920,1916,1814,1810,1554,1420,1236,864,708,650,606,583,554,509,498,462,403,403,361,351,349,288,260,258,236,232,214,212,209,206,203,199,191,190,187,178,161,154,147,145,133,126,124,116,116,111,111,110,103,99,93,92,85,82,79,78,78,78,78,77,75,74,74,73,73,73,72,71,70,70,69,67,66,66,64,63,61,60,58,52,49,48,45,44,43,42,40,39,39,38,37,35,33,31,31,30,29,28,27,27,25,24,23,20,19,19,18,18,18,18,17,17,17,16,16,15,15,15,15,15,14,14,13,13,13,13,12,12,12,12,11,11,10,10,10,9,9,9,9,9,9,8,8,8,8,7,7,7,6,6,6,5,5,5,5,4,4,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"type\":\"bar\"}],                        {\"xaxis\":{\"title\":{\"text\":\"nationality\"}},\"yaxis\":{\"title\":{\"text\":\"Number of Cases\"}},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('b5637d04-41b9-4dbb-929a-9e5ba71aa3cd');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["       nationality  Number of Cases\n","35        Colombia             5940\n","144           Peru             5575\n","53     El Salvador             4806\n","192  United States             4062\n","81           India             3419"],"text/html":["\n","  <div id=\"df-40faa7c5-fac1-4352-8b17-3c21ff5ca24b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nationality</th>\n","      <th>Number of Cases</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>35</th>\n","      <td>Colombia</td>\n","      <td>5940</td>\n","    </tr>\n","    <tr>\n","      <th>144</th>\n","      <td>Peru</td>\n","      <td>5575</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>El Salvador</td>\n","      <td>4806</td>\n","    </tr>\n","    <tr>\n","      <th>192</th>\n","      <td>United States</td>\n","      <td>4062</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>India</td>\n","      <td>3419</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40faa7c5-fac1-4352-8b17-3c21ff5ca24b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-40faa7c5-fac1-4352-8b17-3c21ff5ca24b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-40faa7c5-fac1-4352-8b17-3c21ff5ca24b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":112}]},{"cell_type":"markdown","source":["**Analysis No 8 :- Terrorist Groups with Highest Terror Attacks**"],"metadata":{"id":"yIjchvDt5Zqd"}},{"cell_type":"code","source":["# Terrorist Groups with Highest Terror Attacks\n","sns.barplot(x=df['gname'].value_counts()[1:15].values, y=df['gname'].value_counts()[1:15].index, palette='inferno')\n","plt.xticks(rotation=90)\n","fig = plt.gcf()\n","fig.set_size_inches(10, 8)\n","plt.title('Terrorist Groups with Highest Terror Attacks')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":720},"id":"8F426ju19ivg","executionInfo":{"status":"ok","timestamp":1687346391576,"user_tz":-330,"elapsed":5706,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"57a4a3f1-3d63-49fe-f9c5-fb0d1a6ee284"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Activity of Top Terrorist Groups\n","top_groups10=df[df['gname'].isin(df['gname'].value_counts()[1:11].index)]\n","pd.crosstab(top_groups10.year,top_groups10.gname).plot(color=sns.color_palette('Paired',10))\n","fig=plt.gcf()\n","fig.set_size_inches(18,6)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"rQJxaszc9pSs","executionInfo":{"status":"ok","timestamp":1687346391577,"user_tz":-330,"elapsed":85,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"d05a48b7-7671-492b-a236-3a423d0401f2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Total cases by ETA\n","cases_by_basque_df = cases_group_by_count(df[df.gname=='Basque Fatherland and Freedom (ETA)'],\"country\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CMD3y4DO9siH","executionInfo":{"status":"ok","timestamp":1687346391577,"user_tz":-330,"elapsed":83,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"22bab3e3-fda2-429c-ffcf-c7c8c5779cfc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["       country  Number of Cases\n","6        Spain             1796\n","1       France               23\n","3        Italy               15\n","4       Mexico                2\n","5  Netherlands                2\n"]}]},{"cell_type":"code","source":["# create choropleth map\n","fig = px.choropleth(cases_by_basque_df,\n","                    locations='country',\n","                    locationmode='country names',\n","                    color='Number of Cases',\n","                    hover_name='country',\n","                    projection='natural earth')\n","\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"PYqfH-I39vj2","executionInfo":{"status":"ok","timestamp":1687346391577,"user_tz":-330,"elapsed":78,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"e07365fb-d5b5-4945-f3b5-7d8b80fb395f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"c5e3f3e9-94ae-4a4e-a03a-65d0744d1d17\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c5e3f3e9-94ae-4a4e-a03a-65d0744d1d17\")) {                    Plotly.newPlot(                        \"c5e3f3e9-94ae-4a4e-a03a-65d0744d1d17\",                        [{\"coloraxis\":\"coloraxis\",\"geo\":\"geo\",\"hovertemplate\":\"<b>%{hovertext}</b><br><br>country=%{location}<br>Number of Cases=%{z}<extra></extra>\",\"hovertext\":[\"Spain\",\"France\",\"Italy\",\"Mexico\",\"Netherlands\",\"Belgium\",\"Germany\"],\"locationmode\":\"country names\",\"locations\":[\"Spain\",\"France\",\"Italy\",\"Mexico\",\"Netherlands\",\"Belgium\",\"Germany\"],\"name\":\"\",\"z\":[1796,23,15,2,2,1,1],\"type\":\"choropleth\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"geo\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"projection\":{\"type\":\"natural earth\"},\"center\":{}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Number of Cases\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('c5e3f3e9-94ae-4a4e-a03a-65d0744d1d17');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["# Total cases by Palestinians\n","cases_by_Palestinians_df = cases_group_by_count(df[df.gname=='Palestinians'],\"country\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RaO6fKJz-Evk","executionInfo":{"status":"ok","timestamp":1687346391578,"user_tz":-330,"elapsed":78,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"bfb369e7-e914-4dcf-9f48-89b2ba4a08fa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                     country  Number of Cases\n","21  West Bank and Gaza Strip              477\n","6                     Israel              469\n","10                   Lebanon              133\n","4                     France                5\n","11                  Pakistan                2\n"]}]},{"cell_type":"code","source":["# create choropleth map\n","fig = px.choropleth(cases_by_Palestinians_df,\n","                    locations='country',\n","                    locationmode='country names',\n","                    color='Number of Cases',\n","                    hover_name='country',\n","                    projection='natural earth')\n","\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"fVO2qaLa-m4N","executionInfo":{"status":"ok","timestamp":1687346391578,"user_tz":-330,"elapsed":76,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"de0d7253-000e-468a-ee89-a1e128dc094f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"02fdcb42-80f5-4b35-ab3a-ed4126385908\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"02fdcb42-80f5-4b35-ab3a-ed4126385908\")) {                    Plotly.newPlot(                        \"02fdcb42-80f5-4b35-ab3a-ed4126385908\",                        [{\"coloraxis\":\"coloraxis\",\"geo\":\"geo\",\"hovertemplate\":\"<b>%{hovertext}</b><br><br>country=%{location}<br>Number of Cases=%{z}<extra></extra>\",\"hovertext\":[\"West Bank and Gaza Strip\",\"Israel\",\"Lebanon\",\"France\",\"Pakistan\",\"Kuwait\",\"United States\",\"Turkey\",\"West Germany (FRG)\",\"Egypt\",\"Cyprus\",\"Jordan\",\"Italy\",\"Belgium\",\"Paraguay\",\"Qatar\",\"South Yemen\",\"Spain\",\"Syria\",\"India\",\"United Arab Emirates\",\"United Kingdom\",\"Austria\"],\"locationmode\":\"country names\",\"locations\":[\"West Bank and Gaza Strip\",\"Israel\",\"Lebanon\",\"France\",\"Pakistan\",\"Kuwait\",\"United States\",\"Turkey\",\"West Germany (FRG)\",\"Egypt\",\"Cyprus\",\"Jordan\",\"Italy\",\"Belgium\",\"Paraguay\",\"Qatar\",\"South Yemen\",\"Spain\",\"Syria\",\"India\",\"United Arab Emirates\",\"United Kingdom\",\"Austria\"],\"name\":\"\",\"z\":[477,469,133,5,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1],\"type\":\"choropleth\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"geo\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"projection\":{\"type\":\"natural earth\"},\"center\":{}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Number of Cases\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('02fdcb42-80f5-4b35-ab3a-ed4126385908');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["# Replace the groups had less than 1% of attacks with \"Others\"\n","# calculate the percentage of each value in gname\n","value_counts = df['gname'].value_counts(normalize=True)*100\n","\n","# create a dictionary to map the values to their replacement values\n","replacement_dict = {}\n","for value, percentage in value_counts.items():\n","    if percentage < 1:\n","        replacement_dict[value] = \"Others\"\n","\n","# replace the values in gname\n","df['gname'] = df['gname'].apply(lambda x: replacement_dict.get(x, x))"],"metadata":{"id":"Iy0Qdy-y-szK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.gname.value_counts(normalize=True)*100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wRsCzO2Q-wet","executionInfo":{"status":"ok","timestamp":1687346391579,"user_tz":-330,"elapsed":75,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"b461556f-3ec1-44f3-f644-0a03393710e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Others                                              35.549596\n","Unknown                                             34.557812\n","Shining Path (SL)                                    6.186240\n","Farabundo Marti National Liberation Front (FMLN)     4.363002\n","Irish Republican Army (IRA)                          3.681948\n","Basque Fatherland and Freedom (ETA)                  2.610707\n","Revolutionary Armed Forces of Colombia (FARC)        1.904113\n","National Liberation Army of Colombia (ELN)           1.718242\n","Palestinians                                         1.574937\n","Liberation Tigers of Tamil Eelam (LTTE)              1.536628\n","Kurdistan Workers' Party (PKK)                       1.526696\n","New People's Army (NPA)                              1.413187\n","Nicaraguan Democratic Force (FDN)                    1.251437\n","Manuel Rodriguez Patriotic Front (FPMR)              1.112388\n","Sikh Extremists                                      1.013068\n","Name: gname, dtype: float64"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["all_atk_group_df = cases_group_by_count(df, \"gname\")\n","all_atk_group_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":624},"id":"nHdOtdfu-yK5","executionInfo":{"status":"ok","timestamp":1687346391579,"user_tz":-330,"elapsed":61,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"45ee4af4-6145-44e3-bb62-10e588e1a98f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                                               gname  Number of Cases\n","9                                             Others            25055\n","14                                           Unknown            24356\n","12                                 Shining Path (SL)             4360\n","1   Farabundo Marti National Liberation Front (FMLN)             3075\n","2                        Irish Republican Army (IRA)             2595\n"]},{"output_type":"execute_result","data":{"text/plain":["                                               gname  Number of Cases\n","9                                             Others            25055\n","14                                           Unknown            24356\n","12                                 Shining Path (SL)             4360\n","1   Farabundo Marti National Liberation Front (FMLN)             3075\n","2                        Irish Republican Army (IRA)             2595\n","0                Basque Fatherland and Freedom (ETA)             1840\n","11     Revolutionary Armed Forces of Colombia (FARC)             1342\n","6         National Liberation Army of Colombia (ELN)             1211\n","10                                      Palestinians             1110\n","4            Liberation Tigers of Tamil Eelam (LTTE)             1083\n","3                     Kurdistan Workers' Party (PKK)             1076\n","7                            New People's Army (NPA)              996\n","8                  Nicaraguan Democratic Force (FDN)              882\n","5            Manuel Rodriguez Patriotic Front (FPMR)              784\n","13                                   Sikh Extremists              714"],"text/html":["\n","  <div id=\"df-36b8c8b2-cf2a-4c4c-9c40-df4f8508413f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gname</th>\n","      <th>Number of Cases</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9</th>\n","      <td>Others</td>\n","      <td>25055</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Unknown</td>\n","      <td>24356</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Shining Path (SL)</td>\n","      <td>4360</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Farabundo Marti National Liberation Front (FMLN)</td>\n","      <td>3075</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Irish Republican Army (IRA)</td>\n","      <td>2595</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Basque Fatherland and Freedom (ETA)</td>\n","      <td>1840</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Revolutionary Armed Forces of Colombia (FARC)</td>\n","      <td>1342</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>National Liberation Army of Colombia (ELN)</td>\n","      <td>1211</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Palestinians</td>\n","      <td>1110</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Liberation Tigers of Tamil Eelam (LTTE)</td>\n","      <td>1083</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kurdistan Workers' Party (PKK)</td>\n","      <td>1076</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>New People's Army (NPA)</td>\n","      <td>996</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Nicaraguan Democratic Force (FDN)</td>\n","      <td>882</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Manuel Rodriguez Patriotic Front (FPMR)</td>\n","      <td>784</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Sikh Extremists</td>\n","      <td>714</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-36b8c8b2-cf2a-4c4c-9c40-df4f8508413f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-36b8c8b2-cf2a-4c4c-9c40-df4f8508413f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-36b8c8b2-cf2a-4c4c-9c40-df4f8508413f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["success_rate_group_df = cases_group_by_percentage(df, \"gname\", \"success\")\n","success_rate_group_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":624},"id":"XkjU-YX1-0WC","executionInfo":{"status":"ok","timestamp":1687346391580,"user_tz":-330,"elapsed":58,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"b2395591-098a-450a-ed63-3b0929b12459"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                                               gname    success\n","8                  Nicaraguan Democratic Force (FDN)  98.979592\n","1   Farabundo Marti National Liberation Front (FMLN)  98.894309\n","3                     Kurdistan Workers' Party (PKK)  97.676580\n","11     Revolutionary Armed Forces of Colombia (FARC)  96.423249\n","12                                 Shining Path (SL)  95.412844\n"]},{"output_type":"execute_result","data":{"text/plain":["                                               gname    success\n","8                  Nicaraguan Democratic Force (FDN)  98.979592\n","1   Farabundo Marti National Liberation Front (FMLN)  98.894309\n","3                     Kurdistan Workers' Party (PKK)  97.676580\n","11     Revolutionary Armed Forces of Colombia (FARC)  96.423249\n","12                                 Shining Path (SL)  95.412844\n","4            Liberation Tigers of Tamil Eelam (LTTE)  95.106187\n","7                            New People's Army (NPA)  95.080321\n","5            Manuel Rodriguez Patriotic Front (FPMR)  94.132653\n","6         National Liberation Army of Colombia (ELN)  94.054500\n","13                                   Sikh Extremists  93.837535\n","9                                             Others  91.925763\n","14                                           Unknown  89.222368\n","2                        Irish Republican Army (IRA)  85.125241\n","0                Basque Fatherland and Freedom (ETA)  84.456522\n","10                                      Palestinians  80.090090"],"text/html":["\n","  <div id=\"df-2e34a34f-6ff9-4c60-872f-03a350fea6a0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gname</th>\n","      <th>success</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>Nicaraguan Democratic Force (FDN)</td>\n","      <td>98.979592</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Farabundo Marti National Liberation Front (FMLN)</td>\n","      <td>98.894309</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kurdistan Workers' Party (PKK)</td>\n","      <td>97.676580</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Revolutionary Armed Forces of Colombia (FARC)</td>\n","      <td>96.423249</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Shining Path (SL)</td>\n","      <td>95.412844</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Liberation Tigers of Tamil Eelam (LTTE)</td>\n","      <td>95.106187</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>New People's Army (NPA)</td>\n","      <td>95.080321</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Manuel Rodriguez Patriotic Front (FPMR)</td>\n","      <td>94.132653</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>National Liberation Army of Colombia (ELN)</td>\n","      <td>94.054500</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Sikh Extremists</td>\n","      <td>93.837535</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Others</td>\n","      <td>91.925763</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Unknown</td>\n","      <td>89.222368</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Irish Republican Army (IRA)</td>\n","      <td>85.125241</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Basque Fatherland and Freedom (ETA)</td>\n","      <td>84.456522</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Palestinians</td>\n","      <td>80.090090</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e34a34f-6ff9-4c60-872f-03a350fea6a0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2e34a34f-6ff9-4c60-872f-03a350fea6a0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2e34a34f-6ff9-4c60-872f-03a350fea6a0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":122}]},{"cell_type":"code","source":["success_atk_group_df = cases_group_by_sum(df, \"gname\", \"success\")\n","success_atk_group_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":624},"id":"w7kNXvyZ-2nh","executionInfo":{"status":"ok","timestamp":1687346391580,"user_tz":-330,"elapsed":55,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"90d15f90-f122-45d0-fa34-f2c42bdbc256"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                                               gname  success\n","9                                             Others  23032.0\n","14                                           Unknown  21731.0\n","12                                 Shining Path (SL)   4160.0\n","1   Farabundo Marti National Liberation Front (FMLN)   3041.0\n","2                        Irish Republican Army (IRA)   2209.0\n"]},{"output_type":"execute_result","data":{"text/plain":["                                               gname  success\n","9                                             Others  23032.0\n","14                                           Unknown  21731.0\n","12                                 Shining Path (SL)   4160.0\n","1   Farabundo Marti National Liberation Front (FMLN)   3041.0\n","2                        Irish Republican Army (IRA)   2209.0\n","0                Basque Fatherland and Freedom (ETA)   1554.0\n","11     Revolutionary Armed Forces of Colombia (FARC)   1294.0\n","6         National Liberation Army of Colombia (ELN)   1139.0\n","3                     Kurdistan Workers' Party (PKK)   1051.0\n","4            Liberation Tigers of Tamil Eelam (LTTE)   1030.0\n","7                            New People's Army (NPA)    947.0\n","10                                      Palestinians    889.0\n","8                  Nicaraguan Democratic Force (FDN)    873.0\n","5            Manuel Rodriguez Patriotic Front (FPMR)    738.0\n","13                                   Sikh Extremists    670.0"],"text/html":["\n","  <div id=\"df-6eaae8b6-a35c-45c1-8d37-3ca6571531b9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gname</th>\n","      <th>success</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9</th>\n","      <td>Others</td>\n","      <td>23032.0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Unknown</td>\n","      <td>21731.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Shining Path (SL)</td>\n","      <td>4160.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Farabundo Marti National Liberation Front (FMLN)</td>\n","      <td>3041.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Irish Republican Army (IRA)</td>\n","      <td>2209.0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Basque Fatherland and Freedom (ETA)</td>\n","      <td>1554.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Revolutionary Armed Forces of Colombia (FARC)</td>\n","      <td>1294.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>National Liberation Army of Colombia (ELN)</td>\n","      <td>1139.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kurdistan Workers' Party (PKK)</td>\n","      <td>1051.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Liberation Tigers of Tamil Eelam (LTTE)</td>\n","      <td>1030.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>New People's Army (NPA)</td>\n","      <td>947.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Palestinians</td>\n","      <td>889.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Nicaraguan Democratic Force (FDN)</td>\n","      <td>873.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Manuel Rodriguez Patriotic Front (FPMR)</td>\n","      <td>738.0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Sikh Extremists</td>\n","      <td>670.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6eaae8b6-a35c-45c1-8d37-3ca6571531b9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6eaae8b6-a35c-45c1-8d37-3ca6571531b9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6eaae8b6-a35c-45c1-8d37-3ca6571531b9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":123}]},{"cell_type":"code","source":["# Join the shapefile with your data\n","group_atk = all_atk_group_df.merge(success_atk_group_df, on='gname', how='left')\n","group_atk = group_atk[~((group_atk[\"gname\"] == \"Unknown\") | (group_atk[\"gname\"] == \"Others\"))]\n","group_atk[\"success_rate\"] = group_atk[\"success\"] * 100 / group_atk[\"Number of Cases\"]\n","group_atk"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"fLalr1_2-41m","executionInfo":{"status":"ok","timestamp":1687346391580,"user_tz":-330,"elapsed":53,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"97305c37-95b6-41d1-f3f1-e8f9f67f0760"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                               gname  Number of Cases  \\\n","2                                  Shining Path (SL)             4360   \n","3   Farabundo Marti National Liberation Front (FMLN)             3075   \n","4                        Irish Republican Army (IRA)             2595   \n","5                Basque Fatherland and Freedom (ETA)             1840   \n","6      Revolutionary Armed Forces of Colombia (FARC)             1342   \n","7         National Liberation Army of Colombia (ELN)             1211   \n","8                                       Palestinians             1110   \n","9            Liberation Tigers of Tamil Eelam (LTTE)             1083   \n","10                    Kurdistan Workers' Party (PKK)             1076   \n","11                           New People's Army (NPA)              996   \n","12                 Nicaraguan Democratic Force (FDN)              882   \n","13           Manuel Rodriguez Patriotic Front (FPMR)              784   \n","14                                   Sikh Extremists              714   \n","\n","    success  success_rate  \n","2    4160.0     95.412844  \n","3    3041.0     98.894309  \n","4    2209.0     85.125241  \n","5    1554.0     84.456522  \n","6    1294.0     96.423249  \n","7    1139.0     94.054500  \n","8     889.0     80.090090  \n","9    1030.0     95.106187  \n","10   1051.0     97.676580  \n","11    947.0     95.080321  \n","12    873.0     98.979592  \n","13    738.0     94.132653  \n","14    670.0     93.837535  "],"text/html":["\n","  <div id=\"df-e406a62b-ab82-4dad-b181-9c46021c195e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gname</th>\n","      <th>Number of Cases</th>\n","      <th>success</th>\n","      <th>success_rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>Shining Path (SL)</td>\n","      <td>4360</td>\n","      <td>4160.0</td>\n","      <td>95.412844</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Farabundo Marti National Liberation Front (FMLN)</td>\n","      <td>3075</td>\n","      <td>3041.0</td>\n","      <td>98.894309</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Irish Republican Army (IRA)</td>\n","      <td>2595</td>\n","      <td>2209.0</td>\n","      <td>85.125241</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Basque Fatherland and Freedom (ETA)</td>\n","      <td>1840</td>\n","      <td>1554.0</td>\n","      <td>84.456522</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Revolutionary Armed Forces of Colombia (FARC)</td>\n","      <td>1342</td>\n","      <td>1294.0</td>\n","      <td>96.423249</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>National Liberation Army of Colombia (ELN)</td>\n","      <td>1211</td>\n","      <td>1139.0</td>\n","      <td>94.054500</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Palestinians</td>\n","      <td>1110</td>\n","      <td>889.0</td>\n","      <td>80.090090</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Liberation Tigers of Tamil Eelam (LTTE)</td>\n","      <td>1083</td>\n","      <td>1030.0</td>\n","      <td>95.106187</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kurdistan Workers' Party (PKK)</td>\n","      <td>1076</td>\n","      <td>1051.0</td>\n","      <td>97.676580</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>New People's Army (NPA)</td>\n","      <td>996</td>\n","      <td>947.0</td>\n","      <td>95.080321</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Nicaraguan Democratic Force (FDN)</td>\n","      <td>882</td>\n","      <td>873.0</td>\n","      <td>98.979592</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Manuel Rodriguez Patriotic Front (FPMR)</td>\n","      <td>784</td>\n","      <td>738.0</td>\n","      <td>94.132653</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Sikh Extremists</td>\n","      <td>714</td>\n","      <td>670.0</td>\n","      <td>93.837535</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e406a62b-ab82-4dad-b181-9c46021c195e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e406a62b-ab82-4dad-b181-9c46021c195e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e406a62b-ab82-4dad-b181-9c46021c195e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":124}]},{"cell_type":"code","source":["from plotly.subplots import make_subplots\n","\n","# Create subplots with 1 row and 1 column\n","fig = make_subplots(rows=1, cols=1)\n","\n","all_atk = go.Bar(x=group_atk[\"gname\"], y=group_atk[\"Number of Cases\"], name='Total Cases')\n","success = go.Bar(x=group_atk[\"gname\"], y=group_atk[\"success\"], name='Success')\n","line_success_rate = go.Scatter(x=group_atk[\"gname\"], y=group_atk[\"success_rate\"], mode='lines', name='Success rate')\n","\n","fig = make_subplots(specs=[[{\"secondary_y\": True}]])\n","fig.add_trace(all_atk)\n","fig.add_trace(success)\n","fig.add_trace(line_success_rate, secondary_y=True)\n","\n","fig.update_layout(barmode='group')\n","fig.update_xaxes(title_text=\"Group Name\")\n","fig.update_yaxes(title_text=\"Number of Cases\", secondary_y=False)\n","fig.update_yaxes(title_text=\"Success Rate\", secondary_y=True, range=[0,100])\n","\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"Yv2O-F7l-7g5","executionInfo":{"status":"ok","timestamp":1687346391581,"user_tz":-330,"elapsed":53,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"7ef8bb06-6236-4e59-c0b0-51acf69a6109"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"65e5ce35-2c80-4cb3-9ad5-1b3a4931aa40\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"65e5ce35-2c80-4cb3-9ad5-1b3a4931aa40\")) {                    Plotly.newPlot(                        \"65e5ce35-2c80-4cb3-9ad5-1b3a4931aa40\",                        [{\"name\":\"Total Cases\",\"x\":[\"Shining Path (SL)\",\"Farabundo Marti National Liberation Front (FMLN)\",\"Irish Republican Army (IRA)\",\"Basque Fatherland and Freedom (ETA)\",\"Revolutionary Armed Forces of Colombia (FARC)\",\"National Liberation Army of Colombia (ELN)\",\"Palestinians\",\"Liberation Tigers of Tamil Eelam (LTTE)\",\"Kurdistan Workers' Party (PKK)\",\"New People's Army (NPA)\",\"Nicaraguan Democratic Force (FDN)\",\"Manuel Rodriguez Patriotic Front (FPMR)\",\"Sikh Extremists\"],\"y\":[4360,3075,2595,1840,1342,1211,1110,1083,1076,996,882,784,714],\"type\":\"bar\"},{\"name\":\"Success\",\"x\":[\"Shining Path (SL)\",\"Farabundo Marti National Liberation Front (FMLN)\",\"Irish Republican Army (IRA)\",\"Basque Fatherland and Freedom (ETA)\",\"Revolutionary Armed Forces of Colombia (FARC)\",\"National Liberation Army of Colombia (ELN)\",\"Palestinians\",\"Liberation Tigers of Tamil Eelam (LTTE)\",\"Kurdistan Workers' Party (PKK)\",\"New People's Army (NPA)\",\"Nicaraguan Democratic Force (FDN)\",\"Manuel Rodriguez Patriotic Front (FPMR)\",\"Sikh Extremists\"],\"y\":[4160.0,3041.0,2209.0,1554.0,1294.0,1139.0,889.0,1030.0,1051.0,947.0,873.0,738.0,670.0],\"type\":\"bar\"},{\"mode\":\"lines\",\"name\":\"Success rate\",\"x\":[\"Shining Path (SL)\",\"Farabundo Marti National Liberation Front (FMLN)\",\"Irish Republican Army (IRA)\",\"Basque Fatherland and Freedom (ETA)\",\"Revolutionary Armed Forces of Colombia (FARC)\",\"National Liberation Army of Colombia (ELN)\",\"Palestinians\",\"Liberation Tigers of Tamil Eelam (LTTE)\",\"Kurdistan Workers' Party (PKK)\",\"New People's Army (NPA)\",\"Nicaraguan Democratic Force (FDN)\",\"Manuel Rodriguez Patriotic Front (FPMR)\",\"Sikh Extremists\"],\"y\":[95.41284403669725,98.89430894308943,85.1252408477842,84.45652173913044,96.42324888226527,94.05450041288192,80.09009009009009,95.10618651892891,97.67657992565056,95.08032128514056,98.9795918367347,94.13265306122449,93.8375350140056],\"type\":\"scatter\",\"xaxis\":\"x\",\"yaxis\":\"y2\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,0.94],\"title\":{\"text\":\"Group Name\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Number of Cases\"}},\"yaxis2\":{\"anchor\":\"x\",\"overlaying\":\"y\",\"side\":\"right\",\"title\":{\"text\":\"Success Rate\"},\"range\":[0,100]},\"barmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('65e5ce35-2c80-4cb3-9ad5-1b3a4931aa40');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["**Analysis No 9:- Doubtterr**"],"metadata":{"id":"JeZhBFen_Dr8"}},{"cell_type":"code","source":["df.doubtterr.value_counts(normalize=True)*100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0oFStkWB--cQ","executionInfo":{"status":"ok","timestamp":1687346391581,"user_tz":-330,"elapsed":52,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"72b563c2-d8d9-4fa7-c7dc-0566fa8474ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":[" 0.0    65.437932\n","-9.0    18.282041\n"," 1.0    16.280027\n","Name: doubtterr, dtype: float64"]},"metadata":{},"execution_count":126}]},{"cell_type":"markdown","source":["**Analysis No 10 :- Weapon Type**"],"metadata":{"id":"P-SHeEcg_JnS"}},{"cell_type":"code","source":["cases_group_by_weapon_type_df = plot_bar(df,\"weapon_type\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":646},"id":"p0kAMUzY_G7R","executionInfo":{"status":"ok","timestamp":1687346391582,"user_tz":-330,"elapsed":50,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"7959c239-17d7-4503-b7ac-62e87d4ec3ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   weapon_type  Number of Cases\n","2   Explosives            29715\n","4     Firearms            26558\n","10     Unknown             6716\n","5   Incendiary             5606\n","6        Melee             1596\n"]},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"5a6e4d33-7ce2-4ae4-85eb-f4a45be68213\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"5a6e4d33-7ce2-4ae4-85eb-f4a45be68213\")) {                    Plotly.newPlot(                        \"5a6e4d33-7ce2-4ae4-85eb-f4a45be68213\",                        [{\"x\":[\"Explosives\",\"Firearms\",\"Unknown\",\"Incendiary\",\"Melee\",\"Chemical\",\"Other\",\"Sabotage Equipment\",\"Vehicle (not to include vehicle-borne explosives, i.e., car or truck bombs)\",\"Fake Weapons\",\"Radiological\",\"Biological\"],\"y\":[29715,26558,6716,5606,1596,127,45,41,30,23,13,9],\"type\":\"bar\"}],                        {\"xaxis\":{\"title\":{\"text\":\"weapon_type\"}},\"yaxis\":{\"title\":{\"text\":\"Number of Cases\"}},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('5a6e4d33-7ce2-4ae4-85eb-f4a45be68213');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["cases_group_by_weapon_type_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"uaBULC_T_LHR","executionInfo":{"status":"ok","timestamp":1687346391584,"user_tz":-330,"elapsed":48,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"978540bd-6675-4dd7-be07-4abf78cfcc74"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   weapon_type  Number of Cases\n","2   Explosives            29715\n","4     Firearms            26558\n","10     Unknown             6716\n","5   Incendiary             5606\n","6        Melee             1596"],"text/html":["\n","  <div id=\"df-b54838d5-4217-4ac1-8d42-a55c92f8f15b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weapon_type</th>\n","      <th>Number of Cases</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>Explosives</td>\n","      <td>29715</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Firearms</td>\n","      <td>26558</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Unknown</td>\n","      <td>6716</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Incendiary</td>\n","      <td>5606</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Melee</td>\n","      <td>1596</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b54838d5-4217-4ac1-8d42-a55c92f8f15b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b54838d5-4217-4ac1-8d42-a55c92f8f15b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b54838d5-4217-4ac1-8d42-a55c92f8f15b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":128}]},{"cell_type":"code","source":["# Create a pie trace\n","trace = go.Pie(labels=cases_group_by_weapon_type_df[\"weapon_type\"], values=cases_group_by_weapon_type_df[\"Number of Cases\"])\n","\n","# Create the layout\n","layout = go.Layout(title='Pie Chart Weapon type cases')\n","\n","# Create the figure\n","fig = go.Figure(data=[trace], layout=layout)\n","\n","# Display the figure\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"r_Q2dEOm_PTC","executionInfo":{"status":"ok","timestamp":1687346391584,"user_tz":-330,"elapsed":47,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"99eefc1c-a87c-4e37-f1a6-5858fd27c9fd"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"5cbd4a7a-0b4e-43de-be37-bf578aaa2fc0\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"5cbd4a7a-0b4e-43de-be37-bf578aaa2fc0\")) {                    Plotly.newPlot(                        \"5cbd4a7a-0b4e-43de-be37-bf578aaa2fc0\",                        [{\"labels\":[\"Explosives\",\"Firearms\",\"Unknown\",\"Incendiary\",\"Melee\",\"Chemical\",\"Other\",\"Sabotage Equipment\",\"Vehicle (not to include vehicle-borne explosives, i.e., car or truck bombs)\",\"Fake Weapons\",\"Radiological\",\"Biological\"],\"values\":[29715,26558,6716,5606,1596,127,45,41,30,23,13,9],\"type\":\"pie\"}],                        {\"title\":{\"text\":\"Pie Chart Weapon type cases\"},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('5cbd4a7a-0b4e-43de-be37-bf578aaa2fc0');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["# Function to countplot categorical variables\n","def countplot_bivariate(variable_1,variable_2):\n","\n","    plt.figure(figsize=(20,5))\n","    plt.subplot(1,2,1)\n","    plt.title('Palestinians')\n","    sns.countplot(x=variable_1,hue=variable_2,data=df[df.gname=='Palestinians'],palette='Set1')\n","\n","    plt.subplot(1,2,2)\n","    plt.title('ETA')\n","    sns.countplot(x=variable_1,hue=variable_2,data=df[df.gname=='Basque Fatherland and Freedom (ETA)'],palette='Set1')\n","\n","    plt.show()"],"metadata":{"id":"TLgiiypy_RzO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Analysis No 11:- Number of kills, number of wounds**"],"metadata":{"id":"pBYv3_EH_sTK"}},{"cell_type":"code","source":["# Number of kills\n","kill_group_by_df = cases_group_by_sum(df,'year','nkill')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fYcM0zM-_n4y","executionInfo":{"status":"ok","timestamp":1687346391585,"user_tz":-330,"elapsed":46,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"de275aab-1614-4978-ccd5-8fa63e372dad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year    nkill\n","26  1997  10706.0\n","14  1984  10342.0\n","22  1992   9731.0\n","13  1983   9433.0\n","21  1991   8417.0\n"]}]},{"cell_type":"code","source":["# Number of wounds\n","wound_group_by_df = cases_group_by_sum(df,'year','nwound')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bnzJp3Xo_uy1","executionInfo":{"status":"ok","timestamp":1687346391585,"user_tz":-330,"elapsed":43,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"2bd0fa60-b090-41fc-d2de-167619bccc6a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    year   nwound\n","24  1995  14257.0\n","25  1996  10734.0\n","22  1992   9914.0\n","26  1997   8736.0\n","27  1998   8183.0\n"]}]},{"cell_type":"code","source":["kill_wound_by_year_df = pd.merge(kill_group_by_df, wound_group_by_df, on = 'year')"],"metadata":{"id":"TXO1aWt0_wWU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["kill_wound_by_year_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"xexFWFwy_yYv","executionInfo":{"status":"ok","timestamp":1687346391585,"user_tz":-330,"elapsed":41,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"d00d587d-a6e5-413e-830a-b5a3ebb4a78b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   year    nkill  nwound\n","0  1997  10706.0  8736.0\n","1  1984  10342.0  5261.0\n","2  1992   9731.0  9914.0\n","3  1983   9433.0  4023.0\n","4  1991   8417.0  7589.0"],"text/html":["\n","  <div id=\"df-97116ff7-cb65-40b7-855d-83adddac2274\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>nkill</th>\n","      <th>nwound</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1997</td>\n","      <td>10706.0</td>\n","      <td>8736.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1984</td>\n","      <td>10342.0</td>\n","      <td>5261.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1992</td>\n","      <td>9731.0</td>\n","      <td>9914.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1983</td>\n","      <td>9433.0</td>\n","      <td>4023.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1991</td>\n","      <td>8417.0</td>\n","      <td>7589.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97116ff7-cb65-40b7-855d-83adddac2274')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-97116ff7-cb65-40b7-855d-83adddac2274 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-97116ff7-cb65-40b7-855d-83adddac2274');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":134}]},{"cell_type":"code","source":["# Create a line chart using Plotly\n","kill_wound_by_year_df = kill_wound_by_year_df.sort_values('year', ascending=False)\n","\n","# Create Scatter traces for extended cases and success cases and suicide cases\n","kill_cases = go.Scatter(x=kill_wound_by_year_df['year'], y=kill_wound_by_year_df['nkill'], mode='lines', name='Number of Kill')\n","wound_cases = go.Scatter(x=kill_wound_by_year_df['year'], y=kill_wound_by_year_df['nwound'], mode='lines', name='Number of Wound')\n","\n","# Add traces to a single Figure object\n","fig = go.Figure(data=[kill_cases, wound_cases])\n","fig.update_layout(title='Cases over Time', xaxis_title='Year', yaxis_title='People')\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"vkLXEtLD_0GJ","executionInfo":{"status":"ok","timestamp":1687346391586,"user_tz":-330,"elapsed":41,"user":{"displayName":"PRIYAM SONI","userId":"15499978525326945341"}},"outputId":"429caa5d-2140-43fa-af05-c17c145ea5c9"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"7dad2876-8d15-467d-9dd8-44a66004165e\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"7dad2876-8d15-467d-9dd8-44a66004165e\")) {                    Plotly.newPlot(                        \"7dad2876-8d15-467d-9dd8-44a66004165e\",                        [{\"mode\":\"lines\",\"name\":\"Number of Kill\",\"x\":[2001,2000,1999,1998,1997,1996,1995,1994,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970],\"y\":[3382.0,4403.0,3393.0,4688.0,10706.0,6899.0,6029.0,7682.0,9731.0,8417.0,7133.0,8142.0,7207.0,6454.0,4976.0,7071.0,10342.0,9433.0,5136.0,4847.0,4392.0,2082.0,1456.0,456.0,674.0,617.0,539.0,370.0,566.0,173.0,174.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Number of Wound\",\"x\":[2001,2000,1999,1998,1997,1996,1995,1994,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970],\"y\":[4380.0,5869.0,5341.0,8183.0,8736.0,10734.0,14257.0,7565.0,9914.0,7589.0,6128.0,5533.0,6958.0,5748.0,5814.0,5105.0,5261.0,4023.0,3337.0,3313.0,3641.0,2501.0,1597.0,507.0,755.0,617.0,865.0,495.0,409.0,82.0,212.0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Cases over Time\"},\"xaxis\":{\"title\":{\"text\":\"Year\"}},\"yaxis\":{\"title\":{\"text\":\"People\"}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('7dad2876-8d15-467d-9dd8-44a66004165e');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["**Conclusion**\n","\n","In conclusion, the exploratory data analysis of the Global Terrorism dataset provides valuable insights into the nature of terrorism incidents worldwide. Through this analysis, several significant patterns and trends have been identified:\n","\n","**Geographical Distribution:** The dataset reveals that terrorism incidents are distributed across various regions, with certain areas experiencing higher rates of attacks. This information can aid in identifying regions that require greater attention and resources to combat terrorism effectively.\n","\n","**Types of Attacks:** The dataset categorizes attacks into various types, such as bombings, armed assaults, and hijackings. Analyzing the distribution of attack types helps in understanding the preferred methods employed by terrorist groups and assists in formulating appropriate counter-terrorism strategies.\n","\n","**Target Selection:** The dataset provides information on the targets of terrorist attacks, including civilians, government entities, and infrastructure. By examining this data, it becomes evident which sectors are most vulnerable, enabling the implementation of measures to enhance security and protect potential targets.\n","\n","**Group Affiliations:** The dataset identifies the terrorist organizations responsible for each attack. Analyzing this information aids in understanding the dynamics of various terrorist groups, their ideologies, and their global reach. It can help focus counter-terrorism efforts on specific organizations or regions with higher concentrations of these groups.\n","\n","**Temporal Patterns:** The dataset includes temporal information, such as the date and time of attacks. Analyzing this data can reveal seasonal or periodic patterns in terrorism incidents, contributing to the development of strategies to anticipate and prevent future attacks.\n","\n","By exploring the Global Terrorism dataset, we have gained valuable insights into the nature and characteristics of global terrorism. These findings can inform policymakers, intelligence agencies, and security forces in developing more effective counter-terrorism measures, fostering international cooperation, and promoting peace and stability worldwide.\n","\n","\n","\n","\n"],"metadata":{"id":"6TqES56dpJ3c"}},{"cell_type":"code","source":[],"metadata":{"id":"GGMClQAsBovs"},"execution_count":null,"outputs":[]}]}